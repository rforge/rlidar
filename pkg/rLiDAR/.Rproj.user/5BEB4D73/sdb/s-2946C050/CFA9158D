{
    "contents" : "#--------------------------------------------------------------------------------------------------\n# SILVA, C. A.\n# Forester and Master's degree\n# PhD Student at University of Idaho\n# College of Natural Resources \n# Moscow, Idaho - USA\n# carlos_engflorestal@outlook.com\n# csilva@uidaho.edu \n# Skype: Flowds\n#--------------------------------------------------------------------------------------------------\n\n#--------------------------------------------------------------------------------------------------\n# Description of the project and the Script:\n#\n# Title of the project: Influence of the LiDAR pulse density in the aboveground carbon (AGC) estimation in fast-growing Eucalyptus plantation in Brazil.\n#\n# Objectives of the project: The aim of this project is to evaluate the influence of LiDAR data pulse density of the aboveground C (AGC) stocks estimation in Eucalyptus spp plantations located in S?o Paulo state\n#\n# Dataset:: \n# 1) LiDAR metrics calculated from LiDAR pulse density of 10 points/m? \n# 2) LiDAR metrics calculated from LiDAR pulse density of 5 points/m?\n#--------------------------------------------------------------------------------------------------\n\n#---------------------------------FOR504_02_ST Computational_Data_Analysis #------------------------------------------\n\n#________________________________________________________________________________________#\n#----------------------------------------------------------------------------------------#\n#             1. Install Packages:                                                        #\n#----------------------------------------------------------------------------------------#\n#________________________________________________________________________________________#\n\n#install.packages('hydroGOF') # -> to calculate the RMSE\n#install.packages('equivalence') # -> to make a equivalence plot of the predict and observed AGC\n#install.packages('yaImpute') # -> To map creating\n#install.packages('sp') # -> To map cliping\n#install.packages('raster') # To map operation\n\n#________________________________________________________________________________________#\n#----------------------------------------------------------------------------------------#\n#             2. Loading library:                                                        #\n#----------------------------------------------------------------------------------------#\n#________________________________________________________________________________________#\n\nrequire(hydroGOF)\nrequire(equivalence)\nrequire(yaImpute)\nrequire(sp)\nrequire(raster)\nrequire(mapptools)\nrequire(nortest)\n\n#________________________________________________________________________________________#\n#----------------------------------------------------------------------------------------#\n#             3. set a diretory                                                         #\n#----------------------------------------------------------------------------------------#\n#________________________________________________________________________________________#\nrm(list=ls())\ngraphics.off()\ncat(\"\\14\")\nmydirectory<-\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_dados\"\nsetwd(mydirectory)\ngetwd()\n\n#________________________________________________________________________________________#\n#----------------------------------------------------------------------------------------#\n#             4. Opening my LiDAR metrics data (.csv file)                                                           #\n#----------------------------------------------------------------------------------------#\n#________________________________________________________________________________________#\n\n#\n# mydata10= LiDAR metrics from data with 10 points/m?\nmydata10<-read.table(\"Silva_AGC_10.csv\", sep=\",\", header=T)\n\n# mydata5= LiDAR metrics from data with 5 points/m?\nmydata5<-read.table(\"Silva_AGC_5.csv\", sep=\",\", header=T)\n\n\n# sample\n#set.seed(2)\n#skeep<-sample(1:nrow(mydata10),85)\nkeep<-c(\"117\",\"132\",\"98\",\"45\",\"128\",\"52\",\"72\",\"59\",\"25\",\"54\",\"12\",\"15\",\"125\",\"126\",\"130\",\"136\",\"133\",\"34\",\"70\",\"104\",\"120\",\"17\",\"123\",\"3\",\"81\",\"41\",\"63\",\"87\",\"92\",\"124\",\"99\",\"127\",\"4\",\"121\",\"97\",\"106\",\"24\",\"73\",\"122\",\n\"29\",\"65\",\"31\",\"19\",\"83\",\"111\",\"28\",\"58\",\"69\",\"16\",\"33\",\"112\",\"23\",\"129\",\"103\",\"35\",\"56\",\"51\",\"78\",\"77\",\"21\",\"13\",\"26\",\"108\",\"27\",\"53\",\"91\",\"76\",\"115\",\"5\",\"66\",\"114\",\"57\",\"107\",\"134\",\"113\",\"37\",\"84\",\n\"67\",\"1\",\"94\",\"44\",\"82\",\"86\",\"93\",\"96\",\"95\",\"32\",\"100\",\"101\")\nlength(keep)\n\nmydata10<-mydata10[keep,]\nmydata5<-mydata5[keep,]\n\nAGC1<-mydata10$AGC\nAGC2<-mydata5$AGC\nAGC1-AGC2\n\nAGC<-mydata10$AGC\n\nAGCfarm<-tapply(mydata10$AGC,mydata10$Fazendas, summary)\n#________________________________________________________________________________________#\n#----------------------------------------------------------------------------------------#\n#             5. Exploring my LiDAR data                                                           #\n#----------------------------------------------------------------------------------------#\n#________________________________________________________________________________________#\n\n# 5.1 General exploring of the dataset\n# Visualising the first rows\n  head(mydata10)\n  head(mydata5)\n\n# Visualising the last rows\n  tail(mydata10)\n  tail(mydata5)\n\n# summary of the data\n  summary(mydata10)\n  summary(mydata5)\n\n# number of observation\n  nob10<-nrow(mydata10);nob10\n  nob5<-nrow(mydata5);nob5\n\n# number of colums\n  ncol10<-ncol(mydata10);ncol10\n  ncol5<-ncol(mydata5);ncol5\n\n# 5.2 Exploring the aboveground carbon -AGC\nwindows()\n# histogram of the data AGC\npar(mfrow = c(1, 2))\n# frequency histogram\nhist(AGC, main=\" Frequency distribution of the AGC\", col='gray',\n     breaks=\"fd\",xlim=c(0,max(AGC)*1.2),\n     ylim=c(0,40),\n     xlab=\"AGC (Mg/ha)\")\n  #Next I'll add the mean and median as vertical lines using abline()\n  abline(v=mean(AGC), lwd=1, lty='dotted', col='blue')\n  abline(v=mean(AGC)+sd(AGC), lwd=1, lty='dotted', col='red')\n  abline(v=mean(AGC)-sd(AGC), lwd=1, lty='dotted', col='yellow')\n  abline(v=median(AGC), lwd=1, lty='twodash', col='green')\n  #Last, I'll add a legend to keep track of all these lines.\n  legend(x='topright', c( 'Mean',\"+ 1sd\",\"- 1sd\", 'Median'), col=c('blue',\"red\",\"yellow\", 'green'),\n       lwd=c(1, 1), lty=c('dotted','dotted','dotted', 'twodash'), bty=\"n\")\n\n  # density histogram\n  hist(AGC, prob=T, main=\"Probability Density distribution of the AGC\", col='gray',\n     breaks='fd',xlim=c(0,max(AGC)*1.1),\n     ylim=c(0,max(density(AGC)$y)*1.2),\n     xlab=\"AGC (Mg/ha)\")\n  #Now I'll add the smoothed frequency polygon curve to the histogram\n  lines(density(AGC), lwd=1, lty='solid', col='red')\n  abline(v=mean(AGC), lwd=1, lty='dotted', col='blue')\n  abline(v=mean(AGC)+sd(AGC), lwd=1, lty='dotted', col='red')\n  abline(v=mean(AGC)-sd(AGC), lwd=1, lty='dotted', col='yellow')\n  abline(v=median(AGC), lwd=1, lty='twodash', col='green')\n  #Last, I'll add a legend to keep track of all these lines.\n  legend(x='topright', c( 'Mean',\"+ 1sd\",\"- 1sd\", 'Median', \"density\"), col=c('blue',\"red\",\"yellow\", 'green', 'red'),\n       lwd=c(1, 1), lty=c('dotted','dotted','dotted', 'twodash','solid'), bty=\"n\")\n\n\n  # Cumulative distribution for the AGC\n  win.graph(10,5)\n  rangeAGC = range(AGC) \n  breaks = seq(rangeAGC[1], rangeAGC[2], by=0.05) \n  AGC.cut = cut(AGC, breaks, right=FALSE) \n  AGC.freq = table(AGC.cut)\n\n  cumfreq0 = c(0, cumsum(AGC.freq)) \n  \n  plot(breaks, cumfreq0, type=\"l\",           # plot the data \n     main=\"Cumulative distribution for the AGC\",  # main title \n     xlab=\"AGC (Mg/ha)\",        # x???axis label \n     ylab=\"Cumulative Probability\")   # y???axis label \n  lines(breaks, cumfreq0)  \n\n  # testing if AGC has a normal distribution\n  require(nortest)\n  options(scipen=10) # show the decimal houses\n  # chi2 test \n#??pearson.test\n  chi2_stats = pearson.test(AGC)\n  chi2_p = chi2_stats$p.value;chi2_p # Get p-value for normality test\n  # KS\n  ks_stats = ks.test(AGC,\"pnorm\")\n  z<-(AGC-mean(AGC))/sd(AGC)\n  hist(z)\n  ks_stats = ks.test(z,\"pnorm\") \n  ks_p = ks_stats$p.value;ks_p\n  # Lillie\n  lillie_stats = lillie.test(AGC)\n  lillie_p = lillie_stats$p.value;lillie_p \n\n  # bimodal test\n  require(diptest)\n  dip.test(AGC)\n\n# Boxfplot of the data AGC\n  windows()\n  rb<-boxplot(AGC,main=\"AGC boxplot \", ylab= \"AGC (Mg/ha)\", col=\"gray\")\n  mn.t<-mean(AGC)\n  sd.t<-sd(AGC)\n  xi <- 0.1 + seq(rb$n)\n  points(xi[1], mn.t, col = \"black\", pch = 8)\n  arrows(xi, mn.t - sd.t, xi, mn.t + sd.t,\n       code = 3, col = \"red\", angle = 45, length = .1)\n  legend(\"topleft\", legend = c(\"* = Average\",\"<----> Standard deviation\"), bty=\"n\")\n\n# 5.3 Exploring the LiDAR metrics\n## New Plotting Window\n  win.graph(50,20) \n# boxplot LiDAR metrics\n  rb<-boxplot(mydata10[,7:27], main=\"Boxplot for LiDAR metrics:\n                                              10 pulse/m2\", ylab= \"Height (m)\", col=\"gray\")\n  mn.t<-c(colMeans(mydata10[,7:27]))\n  sd.t<-sapply(mydata10[,7:27],FUN=sd)\n  xi <- 0.3 + seq(rb$n)\n  points(xi, mn.t, col = \"green\", pch = 8)\n  arrows(xi, mn.t - sd.t, xi, mn.t + sd.t,\n       code = 3, col = \"red\", angle = 45, length = .1)\n  legend(\"topleft\", legend = c(\"* = Average\",\"<----> Standard deviation\"), bty=\"n\")\n\n  rb<-boxplot(mydata5[,7:27], main=\"LiDAR metrics-5pts/m?\", ylab= \"Height (m)\", col=\"gray\")\n  mn.t<-c(colMeans(mydata10[,7:27]))\n  sd.t<-sapply(mydata10[,7:27],FUN=sd)\n  xi <- 0.3 + seq(rb$n)\n  points(xi, mn.t, col = \"green\", pch = 8)\n  arrows(xi, mn.t - sd.t, xi, mn.t + sd.t,\n       code = 3, col = \"red\", angle = 45, length = .1)\n  legend(\"topleft\", legend = c(\"* = Average\",\"<----> Standard deviation\"), bty=\"n\")\n\n# 5.4 Pearson's correlation\n# correlating AGC and LiDAR metrics for 10 and 5 LiDAR density\n  cor10<-round(cor(mydata10[,6:27]),2)\n  cor5<-round(cor(mydata5[,6:27]),2)\n\n# correlation between LiDAR metrics from 10 and 5 LiDAR density  \n# merge LiDAR metrics \n  newLiDAR<-cbind(mydata10[,6:27],mydata5[,7:27])\n  colnames(newLiDAR)<-c(\"AGC\",\"hmaxf10\",\"hmedf10\",\"hmodf10\",\"hstdf10\",\"hvarf10\",\"hcvf10\",\"hp5f10\",\"hp10f10\",\"hp20f10\",\n                      \"hp25f10\",\"hp30f10\",\"hp40f10\",\"hp50f10\",\"hp60f10\",\"hp70f10\",\"hp75f10\",\"hp80f10\",\"hp90f10\",\"hp95f10\",\n                      \"hp99f10\",\"df10\",\"hmaxf5\",\"hmedf5\",\"hmodf5\",\"hstdf5\",\"hvarf5\",\"hcvf5\",\"hp5f5\",\"hp5f5\",\"hp20f5\",\n                      \"hp25f5\",\"hp30f5\",\"hp40f5\",\"hp50f5\",\"hp60f5\",\"hp70f5\",\"hp75f5\",\"hp80f5\",\"hp90f5\",\"hp95f5\",\n                      \"hp99f5\",\"df5\")\n  cor10x5<-cor(newLiDAR) # matrix corrlation\n################################\n# 5.5 Radial plot : for the person's corrlation\n\n  require(plotrix)\n  win.graph(13,10) \n  AGC_cor10<-cor(AGC,mydata10[,6:27])\n  AGC_cor5<-cor(AGC,mydata5[,6:27])\n\n  AGC_cor<-rbind(AGC_cor10,AGC_cor5)\n  rownames(AGC_cor)<-c(\"10\",\"5\")\n  radial.plot(AGC_cor,labels=colnames(AGC_cor),rp.type=\"p\",radlab=TRUE,grid.bg=\"transparent\",\n            main=\"Pearson's correlation for the LiDAR metrics\",line.col=c(\"forestgreen\",\"red\"),\n            show.grid=T,lwd=2,lty=c(1,3),\n            radial.lim=c(-1,1))\n  par(xpd=TRUE)\n  legend(-3,-1.8,c(\"LiDAR density 10\",\"LiDAR density 5\"),lty=c(1,3),lwd=2,col=c(\"forestgreen\",\"red\"))\n  par(xpd=FALSE)\n\n#________________________________________________________________________________________#\n#----------------------------------------------------------------------------------------#\n#             6. Remove the variables high correlated ( cor > 0.90)                                                           #\n#----------------------------------------------------------------------------------------#\n#________________________________________________________________________________________#\n\n\n# 6.1 mydata_10\n  corLidarData10<-mydata10[,7:27]\n  corrMat10 <- cor(corLidarData10)\n  print(corrMat10)\n  corrMat10[upper.tri(corrMat10)] <- 0\n  diag(corrMat10) <- 0\n  mydata10.new <- corLidarData10[, apply(corrMat10,2,function(x) all(x<=0.90))]\n  head(mydata10.new)\n  corrMat10.new <- cor(mydata10.new);print(corrMat10.new) # new correlation to check \n\n# 6.2 mydata_5\n  corLidarData5<-mydata5[,7:27]\n  corrMat5 <- cor(corLidarData5)\n  print(corrMat5)\n  corrMat5[upper.tri(corrMat5)] <- 0\n  diag(corrMat5) <- 0\n  mydata5.new <- corLidarData5[, apply(corrMat5,2,function(x) all(x<=0.90))]\n  head(mydata5.new)\n  corrMat5.new <- cor(mydata5.new);print(corrMat5.new) # new correlation to check \n\n# 6.3 correlation plot : for the person's corrlation\n  \n# function to plot hist and correlation graphics \nPlothist<-function(data,lyt) {\n  graphics.off()\n  # *Create scatter plots among PDSI series from multiple points*\n  \n  alpha = 0.05 # If the probability of an observed correlation is \n  # less than alpha, then a regression line will be\n  # fit to the data. \n  \n  # This code, if uncommented, will select random locations:\n  # index = unidrnd(length(gridId),4,1);     \n  \n  varName = colnames(data)           # varName will be used to label the plots. \n  # scatter plots.\n  n = length(varName)         # Number of columns in X, or number of variables.\n  \n  win.graph(10,9)\n  \n  # Create layout for figure panels. Panels will be added to figure in the\n  # order of the numbers in the matrix.\n  lytmtx = matrix(lyt,nrow=n,ncol=n,byrow=T)\n  layout(lytmtx) # Set the layout of the figure using the 'layout' function\n  par(mar=c(2,4,2,2))\n  for (j in 1:n){ # For each variable\n    x = data[,j] # Define x as the values in column j.\n    for (i in 1:n){ # For each variable\n      if (i <= j){ # If i is less than j...\n        y = data[,i]; # Define y as the values in column i\n        \n        if (i != j){\n          \n          plot(x,y,col=rgb(0.5,0.5,0.5),\n               main=\"\",\n               xlab=\"\",\n               ylab=\"\") # Plot x vs. y.\n          index2 = which(as.logical((x > -999) * (y > -999))) # Index for non-NaN values.\n          stats = cor.test(x,y) # Correlate x and y, and return\n          # correlation coefficient, r,\n          # and the probability of Type I\n          # error, p.\n          \n          r = as.numeric(stats$estimate) # Correlation\n          p = as.numeric(stats$p.value) #probability of Type I error, p\n        }\n        if (j == i){       # If i and j are the same, then make a \n          # histogram instead of a scatter plot. \n          hist(x,     # Histogram variables.\n               col=rgb(0.5,0.5,0.5),\n               main = \"\",\n               ylab=\"\",\n               xlab=\"\")\n          \n          \n        } else if (p < alpha){  # If the probability of Type-I error is\n          # less than alpha, then plot r and the\n          # least-squares line of best fit. \n          text(min(x)+2*(range(x,na.rm=T)[2] - range(x,na.rm=T)[1])/10, # Use range function to dynamically\n               max(y)-2*(range(y,na.rm=T)[2] - range(y,na.rm=T)[1])/10,   # place text in each figure.\n               paste(\"r = \",round(r,digits = 2),sep=\"\"),\n               cex=0.9)\n          abline(lm(y~x)) # Add least squares line using 'abline' and 'lm' functions\n        }\n        if (i == 1 & j != 1){       # If i == 1 (first column), add y-axis label.\n          title(ylab = paste(varName[j]))\n        }\n      }\n      \n    }\n    title(paste(varName[j]))   # Add a title for each column. \n  }\n}\n\n\n\n\n# set the lyout for the figure\nlyt = c(1, 0, 0, 0, 0, 0, 0,\n        2, 3, 0, 0, 0, 0, 0,\n        4, 5, 6, 0, 0, 0, 0,\n        7, 8, 9, 10, 0, 0, 0,\n        11,12,13,14,15, 0, 0,\n        16,17,18,19,20,21, 0,\n        22,23,24,25,26,27,28)\n\n# run the function\nPlothist(cbind(AGC,mydata10.new),lyt)\nAGC_10cor<-cor(cbind(AGC,mydata10.new))\nlyt = c(1, 0, 0, 0, 0, 0, 0,0,\n        2, 3, 0, 0, 0, 0, 0,0,\n        4, 5, 6, 0, 0, 0, 0,0,\n        7, 8, 9, 10, 0, 0, 0,0,\n        11,12,13,14,15, 0, 0,0,\n        16,17,18,19,20,21, 0,0,\n        22,23,24,25,26,27,28,0,\n        29,30,31,32,33,34,35,36)\nPlothist(cbind(AGC,mydata5.new),lyt)\nAGC_5cor<-cor(cbind(AGC,mydata5.new))\n\n#________________________________________________________________________________________#\n#----------------------------------------------------------------------------------------#\n#                                       7. Random forest modeling                                                            #\n#----------------------------------------------------------------------------------------#\n#________________________________________________________________________________________#\n  # source function : \n  source(\"C:\\\\Users\\\\Carlos\\\\Documents\\\\PhD_UIdaho\\\\01_Classes\\\\FOR504_02_STComputational_Data_Analysis\\\\Assignments\\\\Assignment5\\\\rf.modelSel.R\")\n\n  #---------------------------------------------------------------------------------------------------------------------------|\n  #  7.2 modeling AGC for dataset : mydata10\n  #---------------------------------------------------------------------------------------------------------------------------|\n  require(randomForest)\n  # mydata_10 model\n  vars10simu<-data.frame()\n  for ( i in 1:100) {\n  ( rf.regress10 <- rf.modelSel(mydata10.new, AGC, parsimony=0.03) )\n  #sevars10 <- rf.regress10$SELVARS\n  impovar10<-rf.regress10$IMPORTANCE\n  vars10simu<-rbind(vars10simu,impovar10)\n  }\n\n  newVec10=c()\n\n  for ( i in rownames(vars10simu)){ \n    split=unlist(strsplit(i, \"f\",fixed = TRUE))\n    newVec10[i]=split\n  }\n\n  Vecbind10=cbind(as.vector(newVec10),vars10simu)\n  summary(Vecbind10)\n  MIR10=tapply(Vecbind10[,2],Vecbind10[,1],mean)\n\n  varSelected10<-c(\"hvarf\",\"hp99f\")\n  \n  set.seed(1)\n  ( rf.fit10 <- randomForest(x=mydata10.new[,varSelected10], y=AGC,importance=TRUE, na.action=na.omit,mtry=2, ntree=1000, \n                             keep.forest=TRUE))\n  summary(rf.fit10)\n    # print rf.fit\n  print(rf.fit10)\n\n  ## Show \"importance\" of variables: higher value mean more important:\n  round(importance(rf.fit10), 2)\n  varImpPlot(rf.fit10)\n  \n  ## prediction rf.fit10\n  (pred10=predict(rf.fit10, mydata10.new))\n\n  # rmse  \n  require(hydroGOF)\n  cor(AGC,pred10)\n  rmse(AGC,pred10)\n  rmseR<-(rmse(AGC,pred10)/mean(AGC))*100 ;rmseR\n  (MBE <- mean(pred10) - mean(AGC))\n  \n  ## r2\n  library(miscTools)\n  (r2.10 <- rSquared(AGC, AGC - pred10))\n  (mse <- mean((AGC - pred10)^2))\n  \n  # plot\n  require(equivalence)\n  equivalence.xyplot(AGC ~ pred10,\n                   alpha=0.05, b0.ii=0.25, b1.ii=0.25, ylim=c(0,max(AGC)*1.2), \n                   xlim=c(0,max(AGC)*1.2),main=\"\" ,type=\"p\",lwd=5, pch=50, \n                   xlab=\"AGC predicted by RF model\", ylab=\"AGC observed (Mg/ha)\")\n\n\n  # cross validation - leave-one-out\n  newData10<-cbind(AGC,mydata10.new)\n\n  AGC10.resid=numeric(length=nrow(newData10))        # Must create a vector for the calculated residuals\n  AGC10.fitted=numeric(length=nrow(newData10))       # Also create a vector for the independent predictions\n\n  for (i in 1:nrow(newData10)) {\n    cross=randomForest(x=newData10[-i,varSelected10], y=newData10[-i,\"AGC\"],importance=TRUE, na.action=na.omit)\n    AGC.est=predict(cross, newData10[i,])     # The estimate for each plot in the loop\n    AGC10.resid[i]=newData10$AGC[i]-AGC.est\n    AGC10.fitted[i]=AGC.est \n  }\n\n  require(hydroGOF)\n  cor(AGC,AGC10.fitted)\n  MBE <- mean(AGC10.fitted) - mean(AGC)\n  (rmse10<-rmse(AGC,AGC10.fitted))\n  rmseR<-(rmse(AGC,AGC10.fitted)/mean(AGC))*100 ;rmseR\n\n  # equivalence plot to cross validation\n  #install.packages(\"equivalence\")\n  require(equivalence)\n  equivalence.xyplot(AGC ~ AGC10.fitted,\n                   alpha=0.05, b0.ii=0.25, b1.ii=0.25, ylim=c(0,max(AGC)*1.2), \n                   xlim=c(0,max(AGC)*1.2),main=\"Cross Validation\" ,type=\"p\",lwd=5, pch=50, \n                   xlab=\"AGC predicted by cross validation\", ylab=\"AGC observed (Mg/ha)\")\n\n  #---------------------------------------------------------------------------------------------------------------------------|\n  #  7.2 modeling AGC for dataset : mydata5\n  #---------------------------------------------------------------------------------------------------------------------------|\n  # mydata_5 model\n  vars5simu<-data.frame()\n  for ( i in 1:100) {\n    ( rf.regress5 <- rf.modelSel(mydata5.new,AGC, parsimony=0.03) )\n    #sevars5 <- rf.regress5$SELVARS\n    (impovar5<-rf.regress5$IMPORTANCE)\n    vars5simu<-rbind(vars5simu,impovar5)\n  }\n\n  newVec5=c()\n\n  for ( i in rownames(vars5simu)){ \n    split=unlist(strsplit(i, \"f\",fixed = TRUE))\n    newVec5[i]=split\n  }\n\n  Vecbind5=cbind(as.vector(newVec5),vars5simu)\n  summary(Vecbind5)\n  MIR5=tapply(Vecbind5[,2],Vecbind5[,1],mean)\n\n  varSelected5<-c(\"hp5f\",\"hp99f\",\"hvarf\")\n  \n  set.seed(1)\n  ( rf.fit5 <- randomForest(x=mydata5.new[,varSelected5], y=AGC,importance=TRUE, na.action=na.omit,mtry=2, ntree=1000, \n                           keep.forest=TRUE))\n  # AIC test\n  # AICc = AIC + 2p(p + 1)/(N - p - 1) from (Sugiura, 1978)\n  # p= number of parameter in the model . \n\n  # N= numero da amostra  \n  n=length(AGC)\n\n  #AICc5=AIC(rf.fit5)+(2*4*(4+1))/(n-4-1)\n  \n  # print rf.fit\n  print(rf.fit5)\n\n  ## Show \"importance\" of variables: higher value mean more important:\n  round(importance(rf.fit5), 2)\n  varImpPlot(rf.fit5)\n  \n  ## prediction rf.fit10\n  (pred5=predict(rf.fit5, mydata5.new))\n  \n  # RMSE\n  require(hydroGOF)\n  cor(AGC,pred5)\n  rmse(AGC,pred5)\n  rmseR<-(rmse(AGC,pred5)/mean(AGC))*100 ;rmseR\n  (MBE <- mean(pred5) - mean(AGC))\n  \n  ## r2\n  (r2.5 <- rSquared(AGC, AGC - pred5))\n  (mse <- mean((AGC - pred5)^2))\n\n  # plot\n  require(equivalence)\n  equivalence.xyplot(AGC ~ pred5,\n                   alpha=0.05, b0.ii=0.25, b1.ii=0.25, ylim=c(0,max(AGC)*1.2), \n                   xlim=c(0,max(AGC)*1.2),main=\"\" ,type=\"p\",lwd=5, pch=50, \n                   xlab=\"AGC predicted by RF model\", ylab=\"AGC observed (Mg/ha)\")\n  \n# cross validation - leave-one-out\n  newData5<-cbind(AGC,mydata5.new)\n\n  AGC5.resid=numeric(length=nrow(newData5))        # Must create a vector for the calculated residuals\n  AGC5.fitted=numeric(length=nrow(newData5))       # Also create a vector for the independent predictions\n\n  for (i in 1:nrow(newData5)) {\n    cross=randomForest(x=newData5[-i,varSelected5], y=newData5[-i,\"AGC\"],importance=TRUE, na.action=na.omit)\n    AGC.est=predict(cross, newData5[i,])     # The estimate for each plot in the loop\n    AGC5.resid[i]=newData5$AGC[i]-AGC.est\n    AGC5.fitted[i]=AGC.est \n  }\n\n  require(hydroGOF)\n  cor(AGC,AGC5.fitted)\n  rmse(AGC,AGC5.fitted)\n  rmseR<-(rmse(AGC,AGC5.fitted)/mean(AGC))*100 ;rmseR\n  library(miscTools)\n  (r2.5 <- rSquared(AGC, AGC - AGC5.fitted))\n\n  # equivalence plot to cross validation\n  #install.packages(\"equivalence\")\n  require(equivalence)\n  equivalence.xyplot(AGC ~ AGC5.fitted,\n                   alpha=0.05, b0.ii=0.25, b1.ii=0.25, ylim=c(0,max(AGC)*1.2), \n                   xlim=c(0,max(AGC)*1.2),main=\"Cross Validation\" ,type=\"p\",lwd=5, pch=50, \n                   xlab=\"AGC predicted by cross validation\", ylab=\"AGC observed (Mg/ha)\")\n\n\n# comparison of the predictions\ndataJoin<-cbind(mydata10$Fazendas,pred10-pred5)\nc10_5<-tapply(dif, fazList,summary)\n\n\n\n#________________________________________________________________________________________#\n#----------------------------------------------------------------------------------------#\n#                                       7. AGC map creating                                                            #\n#----------------------------------------------------------------------------------------#\n#________________________________________________________________________________________#\n\n################# F987 - 10 ###################################################################\n# mapa\nrequire(yaImpute)\nrequire(sp)\nLon = NULL\nLat = NULL\nRows = NULL\nCols = NULL\nNodata = -9999\nMyPredFunc = NULL\npredlist = list(hp99f=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_carbono\\\\00_processamento\\\\00_F987\\\\10_pontos\\\\ltk\\\\lyers\\\\Metrics\\\\Elev_P99_5METERS.asc\",\n                hvarf=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_carbono\\\\00_processamento\\\\00_F987\\\\10_pontos\\\\ltk\\\\lyers\\\\Metrics\\\\ElevVariance_5METERS.asc\")\n\nXTypes = list(hp99f=\"numeric\",hvarf=\"numeric\")\n\noutlist = list(predict=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC10\\\\F987_AGC10.asc\")\nAsciiGridPredict(rf.fit10, predlist, outlist, xyptes = XTypes, lon = Lon, lat = Lat, rows = Rows, cols = Cols, nodata = Nodata, myPredFunc = MyPredFunc)\noutgrid = read.asciigrid(\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC10\\\\F987_AGC10.asc\")\n\n# Packages necessary\nrequire(raster);require(sp);require(maptools);\n# Importing shapefile of the land\n\n# F987\nshp_talhoes <- readShapePoly('C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\DISSERTACAO\\\\00_LiDAR_Fibria\\\\Dados_LAS\\\\Shapes\\\\F987_shapefile\\\\F987_shp.shp')\n\n# preview\nimage(outgrid, col=gray(0:255/255))\nplot(shp_talhoes, add=T, border='red', bg='transparent', asp=1)\n\n# merge with land\noutgrid_talhoes <- outgrid[!is.na(overlay(outgrid, shp_talhoes)),]\n\n# two forms to preview\nimage(outgrid_talhoes, col=gray(0:255/255))\nplot(shp_talhoes, add=T, border='lightgray', bg='transparent', asp=1)\nspplot(outgrid_talhoes, col.regions=bpy.colors(64), scale=list(draw=T),\n       sp.layout=list(list(\"sp.polygons\", shp_talhoes)))\n\n# map export\nwriteAsciiGrid(outgrid_talhoes,\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC10\\\\F987_stand_AGC10.asc\")\n\n\n  ################# F986 - 10 ###################################################################\n  # mapa\n  require(yaImpute)\n  require(sp)\n  Lon = NULL\n  Lat = NULL\n  Rows = NULL\n  Cols = NULL\n  Nodata = -9999\n  MyPredFunc = NULL\n  predlist = list(hp99f=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_carbono\\\\00_processamento\\\\00_F986\\\\10_pontos\\\\ltk\\\\lyers\\\\Metrics\\\\Elev_P99_5METERS.asc\",\n                  hvarf=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_carbono\\\\00_processamento\\\\00_F986\\\\10_pontos\\\\ltk\\\\lyers\\\\Metrics\\\\ElevVariance_5METERS.asc\")\n\nXTypes = list(hp99f=\"numeric\",hvarf=\"numeric\")\n\n\n  outlist = list(predict=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC10\\\\F986_AGC10.asc\")\n  AsciiGridPredict(rf.fit10, predlist, outlist, xyptes = XTypes, lon = Lon, lat = Lat, rows = Rows, cols = Cols, nodata = Nodata, myPredFunc = MyPredFunc)\n  outgrid = read.asciigrid(\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC10\\\\F986_AGC10.asc\")\n\n  # Packages necessary\n  require(raster);require(sp);require(maptools);\n  # Importing shapefile of the land\n\n  # F986\n  shp_talhoes <- readShapePoly('C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\DISSERTACAO\\\\00_LiDAR_Fibria\\\\Dados_LAS\\\\Shapes\\\\F986_shapefile\\\\F986_shp.shp')\n\n  # preview\n  image(outgrid, col=gray(0:255/255))\n  plot(shp_talhoes, add=T, border='red', bg='transparent', asp=1)\n\n  # merge with land\n  outgrid_talhoes <- outgrid[!is.na(overlay(outgrid, shp_talhoes)),]\n\n  # two forms to preview\n  image(outgrid_talhoes, col=gray(0:255/255))\n  plot(shp_talhoes, add=T, border='lightgray', bg='transparent', asp=1)\n  spplot(outgrid_talhoes, col.regions=bpy.colors(64), scale=list(draw=T),\n       sp.layout=list(list(\"sp.polygons\", shp_talhoes)))\n  \n  # map export\n  writeAsciiGrid(outgrid_talhoes,\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC10\\\\F986_stand_AGC10.asc\")\n\n################# F849 - 10 ###################################################################\n# mapa\nrequire(yaImpute)\nrequire(sp)\nLon = NULL\nLat = NULL\nRows = NULL\nCols = NULL\nNodata = -9999\nMyPredFunc = NULL\npredlist = list(hp99f=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_carbono\\\\00_processamento\\\\00_F849\\\\10_pontos\\\\ltk\\\\lyers\\\\Metrics\\\\Elev_P99_5METERS.asc\",\n                hvarf=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_processamento\\\\00_F849\\\\10_pontos\\\\ltk\\\\lyers\\\\Metrics\\\\ElevVariance_5METERS.asc\")\n\nXTypes = list(hp99f=\"numeric\",hvarf=\"numeric\")\n\noutlist = list(predict=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC10\\\\F849_AGC10.asc\")\nAsciiGridPredict(rf.fit10, predlist, outlist, xyptes = XTypes, lon = Lon, lat = Lat, rows = Rows, cols = Cols, nodata = Nodata, myPredFunc = MyPredFunc)\noutgrid = read.asciigrid(\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC10\\\\F849_AGC10.asc\")\n\n# Packages necessary\nrequire(raster);require(sp);require(maptools);\n# Importing shapefile of the land\n\n# F849\nshp_talhoes <- readShapePoly('C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\DISSERTACAO\\\\00_LiDAR_Fibria\\\\Dados_LAS\\\\Shapes\\\\F849_shapefile\\\\F849_shp.shp')\n\n# preview\nimage(outgrid, col=gray(0:255/255))\nplot(shp_talhoes, add=T, border='red', bg='transparent', asp=1)\n\n# merge with land\noutgrid_talhoes <- outgrid[!is.na(overlay(outgrid, shp_talhoes)),]\n\n# two forms to preview\nimage(outgrid_talhoes, col=gray(0:255/255))\nplot(shp_talhoes, add=T, border='lightgray', bg='transparent', asp=1)\nspplot(outgrid_talhoes, col.regions=bpy.colors(64), scale=list(draw=T),\n       sp.layout=list(list(\"sp.polygons\", shp_talhoes)))\n\n# map export\nwriteAsciiGrid(outgrid_talhoes,\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC10\\\\F849_stand_AGC10.asc\")\n\n################# F950 - 10 ###################################################################\n# mapa\nrequire(yaImpute)\nrequire(sp)\nLon = NULL\nLat = NULL\nRows = NULL\nCols = NULL\nNodata = -9999\nMyPredFunc = NULL\npredlist = list(hp99f=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_carbono\\\\00_processamento\\\\00_F950\\\\10_pontos\\\\ltk\\\\lyers\\\\Metrics\\\\Elev_P99_5METERS.asc\",\n                hvarf=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_processamento\\\\00_F950\\\\10_pontos\\\\ltk\\\\lyers\\\\Metrics\\\\ElevVariance_5METERS.asc\")\n\nXTypes = list(hp99f=\"numeric\",hvarf=\"numeric\")\n\noutlist = list(predict=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC10\\\\F950_AGC10.asc\")\nAsciiGridPredict(rf.fit10, predlist, outlist, xyptes = XTypes, lon = Lon, lat = Lat, rows = Rows, cols = Cols, nodata = Nodata, myPredFunc = MyPredFunc)\noutgrid = read.asciigrid(\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC10\\\\F950_AGC10.asc\")\n\n# Packages necessary\nrequire(raster);require(sp);require(maptools);\n# Importing shapefile of the land\n\n# F950\nshp_talhoes <- readShapePoly('C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\DISSERTACAO\\\\00_LiDAR_Fibria\\\\Dados_LAS\\\\Shapes\\\\F950_shapefile\\\\F950_shp.shp')\n\n# preview\nimage(outgrid, col=gray(0:255/255))\nplot(shp_talhoes, add=T, border='red', bg='transparent', asp=1)\n\n# merge with land\noutgrid_talhoes <- outgrid[!is.na(overlay(outgrid, shp_talhoes)),]\n\n# two forms to preview\nimage(outgrid_talhoes, col=gray(0:255/255))\nplot(shp_talhoes, add=T, border='lightgray', bg='transparent', asp=1)\nspplot(outgrid_talhoes, col.regions=bpy.colors(64), scale=list(draw=T),\n       sp.layout=list(list(\"sp.polygons\", shp_talhoes)))\n\n# map export\nwriteAsciiGrid(outgrid_talhoes,\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC10\\\\F950_stand_AGC10.asc\")\n\n################# F948 - 10 ###################################################################\n# mapa\nrequire(yaImpute)\nrequire(sp)\nLon = NULL\nLat = NULL\nRows = NULL\nCols = NULL\nNodata = -9999\nMyPredFunc = NULL\npredlist = list(hp99f=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_carbono\\\\00_processamento\\\\00_F948\\\\10_pontos\\\\ltk\\\\lyers\\\\Metrics\\\\Elev_P99_5METERS.asc\",\n                hvarf=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_processamento\\\\00_F948\\\\10_pontos\\\\ltk\\\\lyers\\\\Metrics\\\\ElevVariance_5METERS.asc\")\n\nXTypes = list(hp99f=\"numeric\",hvarf=\"numeric\")\n\noutlist = list(predict=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC10\\\\F948_AGC10.asc\")\nAsciiGridPredict(rf.fit10, predlist, outlist, xyptes = XTypes, lon = Lon, lat = Lat, rows = Rows, cols = Cols, nodata = Nodata, myPredFunc = MyPredFunc)\noutgrid = read.asciigrid(\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC10\\\\F948_AGC10.asc\")\n\n# Packages necessary\nrequire(raster);require(sp);require(maptools);\n# Importing shapefile of the land\n\n# F948\nshp_talhoes <- readShapePoly('C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\DISSERTACAO\\\\00_LiDAR_Fibria\\\\Dados_LAS\\\\Shapes\\\\F948_shapefile\\\\F948_shp.shp')\n\n# preview\nimage(outgrid, col=gray(0:255/255))\nplot(shp_talhoes, add=T, border='red', bg='transparent', asp=1)\n\n# merge with land\noutgrid_talhoes <- outgrid[!is.na(overlay(outgrid, shp_talhoes)),]\n\n# two forms to preview\nimage(outgrid_talhoes, col=gray(0:255/255))\nplot(shp_talhoes, add=T, border='lightgray', bg='transparent', asp=1)\nspplot(outgrid_talhoes, col.regions=bpy.colors(64), scale=list(draw=T),\n       sp.layout=list(list(\"sp.polygons\", shp_talhoes)))\n\n# map export\nwriteAsciiGrid(outgrid_talhoes,\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC10\\\\F948_stand_AGC10.asc\")\n\n################# F184 - 10 ###################################################################\n# mapa\nrequire(yaImpute)\nrequire(sp)\nLon = NULL\nLat = NULL\nRows = NULL\nCols = NULL\nNodata = -9999\nMyPredFunc = NULL\npredlist = list(hp99f=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_carbono\\\\00_processamento\\\\00_F184\\\\10_pontos\\\\ltk\\\\lyers\\\\Metrics\\\\Elev_P99_5METERS.asc\",\n                hvarf=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_processamento\\\\00_F184\\\\10_pontos\\\\ltk\\\\lyers\\\\Metrics\\\\ElevVariance_5METERS.asc\")\n\nXTypes = list(hp99f=\"numeric\",hvarf=\"numeric\")\n\n\noutlist = list(predict=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC10\\\\F184_AGC10.asc\")\nAsciiGridPredict(rf.fit10, predlist, outlist, xyptes = XTypes, lon = Lon, lat = Lat, rows = Rows, cols = Cols, nodata = Nodata, myPredFunc = MyPredFunc)\noutgrid = read.asciigrid(\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC10\\\\F184_AGC10.asc\")\n\n# Packages necessary\nrequire(raster);require(sp);require(maptools);\n# Importing shapefile of the land\n\n# F184\nshp_talhoes <- readShapePoly('C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\DISSERTACAO\\\\00_LiDAR_Fibria\\\\Dados_LAS\\\\Shapes\\\\F184_shapefile\\\\F184_shp.shp')\n\n# preview\nimage(outgrid, col=gray(0:255/255))\nplot(shp_talhoes, add=T, border='red', bg='transparent', asp=1)\n\n# merge with land\noutgrid_talhoes <- outgrid[!is.na(overlay(outgrid, shp_talhoes)),]\n\n# two forms to preview\nimage(outgrid_talhoes, col=gray(0:255/255))\nplot(shp_talhoes, add=T, border='lightgray', bg='transparent', asp=1)\nspplot(outgrid_talhoes, col.regions=bpy.colors(64), scale=list(draw=T),\n       sp.layout=list(list(\"sp.polygons\", shp_talhoes)))\n\n# map export\nwriteAsciiGrid(outgrid_talhoes,\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC10\\\\F184_stand_AGC10.asc\")\n\n################# F166 - 10 ###################################################################\n# mapa\nrequire(yaImpute)\nrequire(sp)\nLon = NULL\nLat = NULL\nRows = NULL\nCols = NULL\nNodata = -9999\nMyPredFunc = NULL\npredlist = list(hp99f=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_carbono\\\\00_processamento\\\\00_F166\\\\10_pontos\\\\ltk\\\\lyers\\\\Metrics\\\\Elev_P99_5METERS.asc\",\n                hvarf=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_carbono\\\\00_processamento\\\\00_F166\\\\10_pontos\\\\ltk\\\\lyers\\\\Metrics\\\\ElevVariance_5METERS.asc\")\n\nXTypes = list(hp99f=\"numeric\",hvarf=\"numeric\")\n\noutlist = list(predict=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC10\\\\F166_AGC10.asc\")\nAsciiGridPredict(rf.fit10, predlist, outlist, xyptes = XTypes, lon = Lon, lat = Lat, rows = Rows, cols = Cols, nodata = Nodata, myPredFunc = MyPredFunc)\noutgrid = read.asciigrid(\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC10\\\\F166_AGC10.asc\")\n\n# Packages necessary\nrequire(raster);require(sp);require(maptools);\n# Importing shapefile of the land\n\n# F166\nshp_talhoes <- readShapePoly('C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\DISSERTACAO\\\\00_LiDAR_Fibria\\\\Dados_LAS\\\\Shapes\\\\F166_shapefile\\\\F166_shp.shp')\n\n# preview\nimage(outgrid, col=gray(0:255/255))\nplot(shp_talhoes, add=T, border='red', bg='transparent', asp=1)\n\n# merge with land\noutgrid_talhoes <- outgrid[!is.na(overlay(outgrid, shp_talhoes)),]\n\n# two forms to preview\nimage(outgrid_talhoes, col=gray(0:255/255))\nplot(shp_talhoes, add=T, border='lightgray', bg='transparent', asp=1)\nspplot(outgrid_talhoes, col.regions=bpy.colors(64), scale=list(draw=T),\n       sp.layout=list(list(\"sp.polygons\", shp_talhoes)))\n\n# map export\nwriteAsciiGrid(outgrid_talhoes,\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC10\\\\F166_stand_AGC10.asc\")\n\n################# F634 - 10 ###################################################################\n# mapa\nrequire(yaImpute)\nrequire(sp)\nLon = NULL\nLat = NULL\nRows = NULL\nCols = NULL\nNodata = -9999\nMyPredFunc = NULL\npredlist = list(hp99f=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_carbono\\\\00_processamento\\\\00_F634\\\\10_pontos\\\\ltk\\\\lyers\\\\Metrics\\\\Elev_P99_5METERS.asc\",\n                hvarf=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_carbono\\\\00_processamento\\\\00_F634\\\\10_pontos\\\\ltk\\\\lyers\\\\Metrics\\\\ElevVariance_5METERS.asc\")\n\nXTypes = list(hp99f=\"numeric\",hvarf=\"numeric\")\n\noutlist = list(predict=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC10\\\\F634_AGC10.asc\")\nAsciiGridPredict(rf.fit10, predlist, outlist, xyptes = XTypes, lon = Lon, lat = Lat, rows = Rows, cols = Cols, nodata = Nodata, myPredFunc = MyPredFunc)\noutgrid = read.asciigrid(\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC10\\\\F634_AGC10.asc\")\n\n# Packages necessary\nrequire(raster);require(sp);require(maptools);\n# Importing shapefile of the land\n\n# F634\nshp_talhoes <- readShapePoly('C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\DISSERTACAO\\\\00_LiDAR_Fibria\\\\Dados_LAS\\\\Shapes\\\\F634_shapefile\\\\F634_shp.shp')\n\n# preview\nimage(outgrid, col=gray(0:255/255))\nplot(shp_talhoes, add=T, border='red', bg='transparent', asp=1)\n\n# merge with land\noutgrid_talhoes <- outgrid[!is.na(overlay(outgrid, shp_talhoes)),]\n\n# two forms to preview\nimage(outgrid_talhoes, col=gray(0:255/255))\nplot(shp_talhoes, add=T, border='lightgray', bg='transparent', asp=1)\nspplot(outgrid_talhoes, col.regions=bpy.colors(64), scale=list(draw=T),\n       sp.layout=list(list(\"sp.polygons\", shp_talhoes)))\n\n# map export\nwriteAsciiGrid(outgrid_talhoes,\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC10\\\\F634_stand_AGC10.asc\")\n\n###########################################################################################\n###########################################################################################\n###########################################################################################\n\n################# F986 - 5 ###################################################################\n  # map\n  require(yaImpute)\n  require(sp)\n  Lon = NULL\n  Lat = NULL\n  Rows = NULL\n  Cols = NULL\n  Nodata = -9999\n  MyPredFunc = NULL\n  predlist = list(hp99f=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_processamento\\\\00_F986\\\\5_pontos\\\\lyers\\\\Metrics\\\\Elev_P99_5METERS.asc\",\n                 hp5f=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_processamento\\\\00_F986\\\\5_pontos\\\\lyers\\\\Metrics\\\\Elev_P05_5METERS.asc\",\n                 hvarf=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_processamento\\\\00_F986\\\\5_pontos\\\\lyers\\\\Metrics\\\\ElevVariance_5METERS.asc\")\n\n  XTypes = list(hp99f=\"numeric\",hp5f=\"numeric\",hvarf=\"numeric\")\n\n  outlist = list(predict=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC5\\\\F986_AGC5.asc\")\n  AsciiGridPredict(rf.fit5, predlist, outlist, xyptes = XTypes, lon = Lon, lat = Lat, rows = Rows, cols = Cols, nodata = Nodata, myPredFunc = MyPredFunc)\n  outgrid = read.asciigrid(\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC5\\\\F986_AGC5.asc\")\n\n  # Packages necessary\n  require(raster);require(sp);require(maptools);\n  # Importing shapefile of the land\n\n  # F986\n  shp_talhoes <- readShapePoly('C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\DISSERTACAO\\\\00_LiDAR_Fibria\\\\Dados_LAS\\\\Shapes\\\\F986_shapefile\\\\F986_shp.shp')\n\n  # preview\n  image(outgrid, col=gray(0:255/255))\n  plot(shp_talhoes, add=T, border='red', bg='transparent', asp=1)\n\n  # merge with land\n  outgrid_talhoes <- outgrid[!is.na(overlay(outgrid, shp_talhoes)),]\n\n  # two forms to preview\n  image(outgrid_talhoes, col=gray(0:255/255))\n  plot(shp_talhoes, add=T, border='lightgray', bg='transparent', asp=1)\n  spplot(outgrid_talhoes, col.regions=bpy.colors(64), scale=list(draw=T),\n       sp.layout=list(list(\"sp.polygons\", shp_talhoes)))\n\n  # map export\n  writeAsciiGrid(outgrid_talhoes,\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC5\\\\F986_stand_AGC5.asc\")\n\n################# F987 - 5 ###################################################################\n# map\nrequire(yaImpute)\nrequire(sp)\nLon = NULL\nLat = NULL\nRows = NULL\nCols = NULL\nNodata = -9999\nMyPredFunc = NULL\npredlist = list(hp99f=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_processamento\\\\00_F987\\\\5_pontos\\\\lyers\\\\Metrics\\\\Elev_P99_5METERS.asc\",\n                hp5f=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_processamento\\\\00_F987\\\\5_pontos\\\\lyers\\\\Metrics\\\\Elev_P05_5METERS.asc\",\n                hvarf=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_processamento\\\\00_F987\\\\5_pontos\\\\lyers\\\\Metrics\\\\ElevVariance_5METERS.asc\")\n\nXTypes = list(hp95f=\"numeric\",hp5f=\"numeric\",hvarf=\"numeric\")\n\noutlist = list(predict=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC5\\\\F987_AGC5.asc\")\nAsciiGridPredict(rf.fit5, predlist, outlist, xyptes = XTypes, lon = Lon, lat = Lat, rows = Rows, cols = Cols, nodata = Nodata, myPredFunc = MyPredFunc)\noutgrid = read.asciigrid(\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC5\\\\F987_AGC5.asc\")\n\n# Packages necessary\nrequire(raster);require(sp);require(maptools);\n# Importing shapefile of the land\n\n# F987\nshp_talhoes <- readShapePoly('C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\DISSERTACAO\\\\00_LiDAR_Fibria\\\\Dados_LAS\\\\Shapes\\\\F987_shapefile\\\\F987_shp.shp')\n\n# preview\nimage(outgrid, col=gray(0:255/255))\nplot(shp_talhoes, add=T, border='red', bg='transparent', asp=1)\n\n# merge with land\noutgrid_talhoes <- outgrid[!is.na(overlay(outgrid, shp_talhoes)),]\n\n# two forms to preview\nimage(outgrid_talhoes, col=gray(0:255/255))\nplot(shp_talhoes, add=T, border='lightgray', bg='transparent', asp=1)\nspplot(outgrid_talhoes, col.regions=bpy.colors(64), scale=list(draw=T),\n       sp.layout=list(list(\"sp.polygons\", shp_talhoes)))\n\n# map export\nwriteAsciiGrid(outgrid_talhoes,\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC5\\\\F987_stand_AGC5.asc\")\n\n\n################# F849 - 5 ###################################################################\n# map\nrequire(yaImpute)\nrequire(sp)\nLon = NULL\nLat = NULL\nRows = NULL\nCols = NULL\nNodata = -9999\nMyPredFunc = NULL\npredlist = list(hp99f=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_processamento\\\\00_F849\\\\5_pontos\\\\ltk\\\\lyers\\\\Metrics\\\\Elev_P99_5METERS.asc\",\n                hp5f=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_processamento\\\\00_F849\\\\5_pontos\\\\ltk\\\\lyers\\\\Metrics\\\\Elev_P05_5METERS.asc\",\n                hvarf=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_processamento\\\\00_F849\\\\5_pontos\\\\ltk\\\\lyers\\\\Metrics\\\\ElevVariance_5METERS.asc\")\n\nXTypes = list(hp99f=\"numeric\",hp5f=\"numeric\",hvarf=\"numeric\")\n\noutlist = list(predict=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC5\\\\F849_AGC5.asc\")\nAsciiGridPredict(rf.fit5, predlist, outlist, xyptes = XTypes, lon = Lon, lat = Lat, rows = Rows, cols = Cols, nodata = Nodata, myPredFunc = MyPredFunc)\noutgrid = read.asciigrid(\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC5\\\\F849_AGC5.asc\")\n\n# Packages necessary\nrequire(raster);require(sp);require(maptools);\n# Importing shapefile of the land\n\n# F849\nshp_talhoes <- readShapePoly('C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\DISSERTACAO\\\\00_LiDAR_Fibria\\\\Dados_LAS\\\\Shapes\\\\F849_shapefile\\\\F849_shp.shp')\n\n# preview\nimage(outgrid, col=gray(0:255/255))\nplot(shp_talhoes, add=T, border='red', bg='transparent', asp=1)\n\n# merge with land\noutgrid_talhoes <- outgrid[!is.na(overlay(outgrid, shp_talhoes)),]\n\n# two forms to preview\nimage(outgrid_talhoes, col=gray(0:255/255))\nplot(shp_talhoes, add=T, border='lightgray', bg='transparent', asp=1)\nspplot(outgrid_talhoes, col.regions=bpy.colors(64), scale=list(draw=T),\n       sp.layout=list(list(\"sp.polygons\", shp_talhoes)))\n\n# map export\nwriteAsciiGrid(outgrid_talhoes,\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC5\\\\F849_stand_AGC5.asc\")\n\n################# F950 - 5 ###################################################################\n# map\nrequire(yaImpute)\nrequire(sp)\nLon = NULL\nLat = NULL\nRows = NULL\nCols = NULL\nNodata = -9999\nMyPredFunc = NULL\npredlist = list(hp99f=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_processamento\\\\00_F950\\\\5_pontos\\\\lyers\\\\Metrics\\\\Elev_P99_5METERS.asc\",\n                hp5f=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_processamento\\\\00_F950\\\\5_pontos\\\\lyers\\\\Metrics\\\\Elev_P05_5METERS.asc\",\n                hvarf=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_processamento\\\\00_F950\\\\5_pontos\\\\lyers\\\\Metrics\\\\ElevVariance_5METERS.asc\")\n\nXTypes = list(hp99f=\"numeric\",hp5f=\"numeric\",hvarf=\"numeric\")\n\noutlist = list(predict=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC5\\\\F950_AGC5.asc\")\nAsciiGridPredict(rf.fit5, predlist, outlist, xyptes = XTypes, lon = Lon, lat = Lat, rows = Rows, cols = Cols, nodata = Nodata, myPredFunc = MyPredFunc)\noutgrid = read.asciigrid(\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC5\\\\F950_AGC5.asc\")\n\n# Packages necessary\nrequire(raster);require(sp);require(maptools);\n# Importing shapefile of the land\n\n# F950\nshp_talhoes <- readShapePoly('C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\DISSERTACAO\\\\00_LiDAR_Fibria\\\\Dados_LAS\\\\Shapes\\\\F950_shapefile\\\\F950_shp.shp')\n\n# preview\nimage(outgrid, col=gray(0:255/255))\nplot(shp_talhoes, add=T, border='red', bg='transparent', asp=1)\n\n# merge with land\noutgrid_talhoes <- outgrid[!is.na(overlay(outgrid, shp_talhoes)),]\n\n# two forms to preview\nimage(outgrid_talhoes, col=gray(0:255/255))\nplot(shp_talhoes, add=T, border='lightgray', bg='transparent', asp=1)\nspplot(outgrid_talhoes, col.regions=bpy.colors(64), scale=list(draw=T),\n       sp.layout=list(list(\"sp.polygons\", shp_talhoes)))\n\n# map export\nwriteAsciiGrid(outgrid_talhoes,\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC5\\\\F950_stand_AGC5.asc\")\n\n################# F948 - 5 ###################################################################\n# map\nrequire(yaImpute)\nrequire(sp)\nLon = NULL\nLat = NULL\nRows = NULL\nCols = NULL\nNodata = -9999\nMyPredFunc = NULL\npredlist = list(hp99f=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_processamento\\\\00_F948\\\\5_pontos\\\\ltk\\\\lyers\\\\Metrics\\\\Elev_P99_5METERS.asc\",\n                hp5f=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_processamento\\\\00_F948\\\\5_pontos\\\\ltk\\\\lyers\\\\Metrics\\\\Elev_P05_5METERS.asc\",\n                hvarf=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_processamento\\\\00_F948\\\\5_pontos\\\\ltk\\\\lyers\\\\Metrics\\\\ElevVariance_5METERS.asc\")\n\nXTypes = list(hp99f=\"numeric\",hp5f=\"numeric\",hvarf=\"numeric\")\n\noutlist = list(predict=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC5\\\\F948_AGC5.asc\")\nAsciiGridPredict(rf.fit5, predlist, outlist, xyptes = XTypes, lon = Lon, lat = Lat, rows = Rows, cols = Cols, nodata = Nodata, myPredFunc = MyPredFunc)\noutgrid = read.asciigrid(\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC5\\\\F948_AGC5.asc\")\n\n# Packages necessary\nrequire(raster);require(sp);require(maptools);\n# Importing shapefile of the land\n\n# F948\nshp_talhoes <- readShapePoly('C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\DISSERTACAO\\\\00_LiDAR_Fibria\\\\Dados_LAS\\\\Shapes\\\\F948_shapefile\\\\F948_shp.shp')\n\n# preview\nimage(outgrid, col=gray(0:255/255))\nplot(shp_talhoes, add=T, border='red', bg='transparent', asp=1)\n\n# merge with land\noutgrid_talhoes <- outgrid[!is.na(overlay(outgrid, shp_talhoes)),]\n\n# two forms to preview\nimage(outgrid_talhoes, col=gray(0:255/255))\nplot(shp_talhoes, add=T, border='lightgray', bg='transparent', asp=1)\nspplot(outgrid_talhoes, col.regions=bpy.colors(64), scale=list(draw=T),\n       sp.layout=list(list(\"sp.polygons\", shp_talhoes)))\n\n# map export\nwriteAsciiGrid(outgrid_talhoes,\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC5\\\\F948_stand_AGC5.asc\")\n\n################# F184 - 5 ###################################################################\n# map\nrequire(yaImpute)\nrequire(sp)\nLon = NULL\nLat = NULL\nRows = NULL\nCols = NULL\nNodata = -9999\nMyPredFunc = NULL\npredlist = list(hp99f=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_processamento\\\\00_F184\\\\5_pontos\\\\lyers\\\\Metrics\\\\Elev_P99_5METERS.asc\",\n                hp5f=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_processamento\\\\00_F184\\\\5_pontos\\\\lyers\\\\Metrics\\\\Elev_P05_5METERS.asc\",\n                hvarf=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_processamento\\\\00_F184\\\\5_pontos\\\\lyers\\\\Metrics\\\\ElevVariance_5METERS.asc\")\n\nXTypes = list(hp99f=\"numeric\",hp5f=\"numeric\",hvarf=\"numeric\")\n\noutlist = list(predict=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC5\\\\F184_AGC5.asc\")\nAsciiGridPredict(rf.fit5, predlist, outlist, xyptes = XTypes, lon = Lon, lat = Lat, rows = Rows, cols = Cols, nodata = Nodata, myPredFunc = MyPredFunc)\noutgrid = read.asciigrid(\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC5\\\\F184_AGC5.asc\")\n\n# Packages necessary\nrequire(raster);require(sp);require(maptools);\n# Importing shapefile of the land\n\n# F184\nshp_talhoes <- readShapePoly('C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\DISSERTACAO\\\\00_LiDAR_Fibria\\\\Dados_LAS\\\\Shapes\\\\F184_shapefile\\\\F184_shp.shp')\n\n# preview\nimage(outgrid, col=gray(0:255/255))\nplot(shp_talhoes, add=T, border='red', bg='transparent', asp=1)\n\n# merge with land\noutgrid_talhoes <- outgrid[!is.na(overlay(outgrid, shp_talhoes)),]\n\n# two forms to preview\nimage(outgrid_talhoes, col=gray(0:255/255))\nplot(shp_talhoes, add=T, border='lightgray', bg='transparent', asp=1)\nspplot(outgrid_talhoes, col.regions=bpy.colors(64), scale=list(draw=T),\n       sp.layout=list(list(\"sp.polygons\", shp_talhoes)))\n\n# map export\nwriteAsciiGrid(outgrid_talhoes,\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC5\\\\F184_stand_AGC5.asc\")\n\n\n################# F166 - 5 ###################################################################\n# map\nrequire(yaImpute)\nrequire(sp)\nLon = NULL\nLat = NULL\nRows = NULL\nCols = NULL\nNodata = -9999\nMyPredFunc = NULL\npredlist = list(hp99f=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_processamento\\\\00_F166\\\\5_pontos\\\\ltk\\\\lyers\\\\Metrics\\\\Elev_P99_5METERS.asc\",\n                hp5f=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_processamento\\\\00_F166\\\\5_pontos\\\\ltk\\\\lyers\\\\Metrics\\\\Elev_P05_5METERS.asc\",\n                hvarf=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_processamento\\\\00_F166\\\\5_pontos\\\\ltk\\\\lyers\\\\Metrics\\\\\\\\ElevVariance_5METERS.asc\")\n\nXTypes = list(hp99f=\"numeric\",hp5f=\"numeric\",hvarf=\"numeric\")\n\noutlist = list(predict=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC5\\\\F166_AGC5.asc\")\nAsciiGridPredict(rf.fit5, predlist, outlist, xyptes = XTypes, lon = Lon, lat = Lat, rows = Rows, cols = Cols, nodata = Nodata, myPredFunc = MyPredFunc)\noutgrid = read.asciigrid(\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC5\\\\F166_AGC5.asc\")\n\n# Packages necessary\nrequire(raster);require(sp);require(maptools);\n# Importing shapefile of the land\n\n# F166\nshp_talhoes <- readShapePoly('C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\DISSERTACAO\\\\00_LiDAR_Fibria\\\\Dados_LAS\\\\Shapes\\\\F166_shapefile\\\\F166_shp.shp')\n\n# preview\nimage(outgrid, col=gray(0:255/255))\nplot(shp_talhoes, add=T, border='red', bg='transparent', asp=1)\n\n# merge with land\noutgrid_talhoes <- outgrid[!is.na(overlay(outgrid, shp_talhoes)),]\n\n# two forms to preview\nimage(outgrid_talhoes, col=gray(0:255/255))\nplot(shp_talhoes, add=T, border='lightgray', bg='transparent', asp=1)\nspplot(outgrid_talhoes, col.regions=bpy.colors(64), scale=list(draw=T),\n       sp.layout=list(list(\"sp.polygons\", shp_talhoes)))\n\n# map export\nwriteAsciiGrid(outgrid_talhoes,\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC5\\\\F166_stand_AGC5.asc\")\n\n################# F634 - 5 ###################################################################\n# map\nrequire(yaImpute)\nrequire(sp)\nLon = NULL\nLat = NULL\nRows = NULL\nCols = NULL\nNodata = -9999\nMyPredFunc = NULL\npredlist = list(hp99f=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_processamento\\\\00_F634\\\\5_pontos\\\\ltk\\\\lyers\\\\Metrics\\\\Elev_P99_5METERS.asc\",\n                hp5f=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_processamento\\\\00_F634\\\\5_pontos\\\\ltk\\\\lyers\\\\Metrics\\\\Elev_P05_5METERS.asc\",\n                hvarf=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_processamento\\\\00_F634\\\\5_pontos\\\\ltk\\\\lyers\\\\Metrics\\\\ElevVariance_5METERS.asc\")\n\nXTypes = list(hp99f=\"numeric\",hp5f=\"numeric\",hvarf=\"numeric\")\n\noutlist = list(predict=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC5\\\\F634_AGC5.asc\")\nAsciiGridPredict(rf.fit5, predlist, outlist, xyptes = XTypes, lon = Lon, lat = Lat, rows = Rows, cols = Cols, nodata = Nodata, myPredFunc = MyPredFunc)\noutgrid = read.asciigrid(\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC5\\\\F634_AGC5.asc\")\n\n# Packages necessary\nrequire(raster);require(sp);require(maptools);\n# Importing shapefile of the land\n\n# F634\nshp_talhoes <- readShapePoly('C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\DISSERTACAO\\\\00_LiDAR_Fibria\\\\Dados_LAS\\\\Shapes\\\\F634_shapefile\\\\F634_shp.shp')\n\n# preview\nimage(outgrid, col=gray(0:255/255))\nplot(shp_talhoes, add=T, border='red', bg='transparent', asp=1)\n\n# merge with land\noutgrid_talhoes <- outgrid[!is.na(overlay(outgrid, shp_talhoes)),]\n\n# two forms to preview\nimage(outgrid_talhoes, col=gray(0:255/255))\nplot(shp_talhoes, add=T, border='lightgray', bg='transparent', asp=1)\nspplot(outgrid_talhoes, col.regions=bpy.colors(64), scale=list(draw=T),\n       sp.layout=list(list(\"sp.polygons\", shp_talhoes)))\n\n# map export\nwriteAsciiGrid(outgrid_talhoes,\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC5\\\\F634_stand_AGC5.asc\")\n\n#________________________________________________________________________________________#\n#----------------------------------------------------------------------------------------#\n#                                       7. AGC map validation                                                            #\n#----------------------------------------------------------------------------------------#\n#________________________________________________________________________________________#\n# LiDAR 10\n\nF986_10<-raster(\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC10\\\\F986_stand_AGC10.asc\")\nplot(F986_10)\nF987_10<-raster(\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC10\\\\F987_stand_AGC10.asc\")\nplot(F987_10)\nF849_10<-raster(\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC10\\\\F849_stand_AGC10.asc\")\nplot(F849_10)\nF950_10<-raster(\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC10\\\\F950_stand_AGC10.asc\")\nplot(F950_10)\nF948_10<-raster(\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC10\\\\F948_stand_AGC10.asc\")\nplot(F948_10)\nF184_10<-raster(\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC10\\\\F184_stand_AGC10.asc\")\nplot(F184_10)\nF166_10<-raster(\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC10\\\\F166_stand_AGC10.asc\")\nplot(F166_10)\nF634_10<-raster(\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC10\\\\F634_stand_AGC10.asc\")\nplot(F634_10)\n\n# F986\nF986_10df=as.data.frame(F986_10, row.names=NULL, xy=TRUE,na.rm=TRUE)\nF986shp <- readShapePoly('C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_dados\\\\shape_parcelas\\\\F986\\\\F986.shp')\npts<-SpatialPoints(F986_10df)\nover10 = overlay(pts,F986shp)\ncDataF986<-F986shp@data[over10,]\nF986over10<-na.omit(cbind(F986_10df,cDataF986))\nF986over10<-F986over10[,1:4]\nF986over10<-cbind(F986over10,rep(\"F986\",nrow(F986over10)),paste0(\"F986\",F986over10$Id))\ncolnames(F986over10)<-c(\"x\",\"y\",\"AGCmap\",\"over10\",\"Fazendas\", \"cod\")\n\n# F987\nF987_10df=as.data.frame(F987_10, row.names=NULL, xy=TRUE,na.rm=TRUE)\nF987shp <- readShapePoly('C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_dados\\\\shape_parcelas\\\\F987\\\\F987.shp')\npts<-SpatialPoints(F987_10df)\nover10 = overlay(pts,F987shp)\ncDataF987<-F987shp@data[over10,]\nF987over10<-na.omit(cbind(F987_10df,cDataF987))\nF987over10<-F987over10[,1:4]\nF987over10<-cbind(F987over10,rep(\"F987\",nrow(F987over10)),paste0(\"F987\",F987over10$Id))\ncolnames(F987over10)<-c(\"x\",\"y\",\"AGCmap\",\"over10\",\"Fazendas\", \"cod\")\n\n# F950\nF950_10df=as.data.frame(F950_10, row.names=NULL, xy=TRUE,na.rm=TRUE)\nF950shp <- readShapePoly('C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_dados\\\\shape_parcelas\\\\F950\\\\F950.shp')\npts<-SpatialPoints(F950_10df)\nover10 = overlay(pts,F950shp)\ncDataF950<-F950shp@data[over10,]\nF950over10<-na.omit(cbind(F950_10df,cDataF950))\nF950over10<-F950over10[,1:4]\nF950over10<-cbind(F950over10,rep(\"F950\",nrow(F950over10)),paste0(\"F950\",F950over10$Id))\ncolnames(F950over10)<-c(\"x\",\"y\",\"AGCmap\",\"over10\",\"Fazendas\", \"cod\")\n\n# F849\nF849_10df=as.data.frame(F849_10, row.names=NULL, xy=TRUE,na.rm=TRUE)\nF849shp <- readShapePoly('C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_dados\\\\shape_parcelas\\\\F849\\\\F849.shp')\npts<-SpatialPoints(F849_10df)\nover10 = overlay(pts,F849shp)\ncDataF849<-F849shp@data[over10,]\nF849over10<-na.omit(cbind(F849_10df,cDataF849))\nF849over10<-F849over10[,1:4]\nF849over10<-cbind(F849over10,rep(\"F849\",nrow(F849over10)),paste0(\"F849\",F849over10$Id))\ncolnames(F849over10)<-c(\"x\",\"y\",\"AGCmap\",\"over10\",\"Fazendas\", \"cod\")\n\n# F948\nF948_10df=as.data.frame(F948_10, row.names=NULL, xy=TRUE,na.rm=TRUE)\nF948shp <- readShapePoly('C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_dados\\\\shape_parcelas\\\\F948\\\\F948.shp')\npts<-SpatialPoints(F948_10df)\nover10 = overlay(pts,F948shp)\ncDataF948<-F948shp@data[over10,]\nF948over10<-na.omit(cbind(F948_10df,cDataF948))\nF948over10<-F948over10[,1:4]\nF948over10<-cbind(F948over10,rep(\"F948\",nrow(F948over10)),paste0(\"F948\",F948over10$Id))\ncolnames(F948over10)<-c(\"x\",\"y\",\"AGCmap\",\"over10\",\"Fazendas\", \"cod\")\n\n# F184\nF184_10df=as.data.frame(F184_10, row.names=NULL, xy=TRUE,na.rm=TRUE)\nF184shp <- readShapePoly('C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_dados\\\\shape_parcelas\\\\F184\\\\F184.shp')\npts<-SpatialPoints(F184_10df)\nover10 = overlay(pts,F184shp)\ncDataF184<-F184shp@data[over10,]\nF184over10<-na.omit(cbind(F184_10df,cDataF184))\nF184over10<-F184over10[,1:4]\nF184over10<-cbind(F184over10,rep(\"F184\",nrow(F184over10)),paste0(\"F184\",F184over10$Id))\ncolnames(F184over10)<-c(\"x\",\"y\",\"AGCmap\",\"over10\",\"Fazendas\", \"cod\")\n\n\n# F166\nF166_10df=as.data.frame(F166_10, row.names=NULL, xy=TRUE,na.rm=TRUE)\nF166shp <- readShapePoly('C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_dados\\\\shape_parcelas\\\\F166\\\\F166.shp')\npts<-SpatialPoints(F166_10df)\nover10 = overlay(pts,F166shp)\ncDataF166<-F166shp@data[over10,]\nF166over10<-na.omit(cbind(F166_10df,cDataF166))\nF166over10<-F166over10[,1:4]\nF166over10<-cbind(F166over10,rep(\"F166\",nrow(F166over10)),paste0(\"F166\",F166over10$Id))\ncolnames(F166over10)<-c(\"x\",\"y\",\"AGCmap\",\"over10\",\"Fazendas\", \"cod\")\n\n# F634\nF634_10df=as.data.frame(F634_10, row.names=NULL, xy=TRUE,na.rm=TRUE)\nF634shp <- readShapePoly('C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_dados\\\\shape_parcelas\\\\F634\\\\F634.shp')\npts<-SpatialPoints(F634_10df)\nover10 = overlay(pts,F634shp)\ncDataF634<-F634shp@data[over10,]\nF634over10<-na.omit(cbind(F634_10df,cDataF634))\nF634over10<-F634over10[,1:4]\nF634over10<-cbind(F634over10,rep(\"F634\",nrow(F634over10)),paste0(\"F634\",F634over10$Id))\ncolnames(F634over10)<-c(\"x\",\"y\",\"AGCmap\",\"over10\",\"Fazendas\", \"cod\")\n\n#\nAGCmap10<-rbind(F986over10,F987over10,F849over10,F950over10,F948over10,F184over10,F166over10,F634over10)\nhead(AGCmap10)\nAGCmeanMap10=tapply(AGCmap10$AGCmap, AGCmap10$cod, mean)\nAGCmeanMap10<-cbind(rownames(AGCmeanMap10),AGCmeanMap10)\ncolnames(AGCmeanMap10)<-c(\"cod\",\"AGCmed\")\nnrow(AGCmeanMap10)\n\nmydata10.0<-read.table(\"Silva_AGC_10.csv\", sep=\",\", header=T)\nmydata10crossMap<-mydata10.0[-as.numeric(keep),]\nmydata5crossMap[,2]<-paste(mydata5crossMap$cod)\nnrow(mydata10crossMap)\nhead(mydata10crossMap)\ntotal10<- merge(mydata10crossMap,AGCmeanMap10,by=\"cod\")\ntotal10$AGCmed<-as.numeric(paste(total10$AGCmed))\nhead(total10)\ncor(total10$AGC, as.numeric(total10$AGCmed))\nnrow(total10)\n\n############\n# LiDAR5\n\nF986_5<-raster(\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC5\\\\F986_stand_AGC5.asc\")\nplot(F986_5)\nF987_5<-raster(\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC5\\\\F987_stand_AGC5.asc\")\nplot(F987_5)\nF849_5<-raster(\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC5\\\\F849_stand_AGC5.asc\")\nplot(F849_5)\nF950_5<-raster(\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC5\\\\F950_stand_AGC5.asc\")\nplot(F950_5)\nF948_5<-raster(\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC5\\\\F948_stand_AGC5.asc\")\nplot(F948_5)\nF184_5<-raster(\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC5\\\\F184_stand_AGC5.asc\")\nplot(F184_5)\nF166_5<-raster(\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC5\\\\F166_stand_AGC5.asc\")\nplot(F166_5)\nF634_5<-raster(\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGC5\\\\F634_stand_AGC5.asc\")\nplot(F634_5)\n\n# F986\nF986_5df=as.data.frame(F986_5, row.names=NULL, xy=TRUE,na.rm=TRUE)\nF986shp <- readShapePoly('C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_dados\\\\shape_parcelas\\\\F986\\\\F986.shp')\npts<-SpatialPoints(F986_5df)\nover5 = overlay(pts,F986shp)\ncDataF986<-F986shp@data[over5,]\nF986over5<-na.omit(cbind(F986_5df,cDataF986))\nF986over5<-F986over5[,1:4]\nF986over5<-cbind(F986over5,rep(\"F986\",nrow(F986over5)),paste0(\"F986\",F986over5$Id))\ncolnames(F986over5)<-c(\"x\",\"y\",\"AGCmap\",\"plot\",\"Fazendas\", \"cod\")\n\n# F987\nF987_5df=as.data.frame(F987_5, row.names=NULL, xy=TRUE,na.rm=TRUE)\nF987shp <- readShapePoly('C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_dados\\\\shape_parcelas\\\\F987\\\\F987.shp')\npts<-SpatialPoints(F987_5df)\nover5 = overlay(pts,F987shp)\ncDataF987<-F987shp@data[over5,]\nF987over5<-na.omit(cbind(F987_5df,cDataF987))\nF987over5<-F987over5[,1:4]\nF987over5<-cbind(F987over5,rep(\"F987\",nrow(F987over5)),paste0(\"F987\",F987over5$Id))\ncolnames(F987over5)<-c(\"x\",\"y\",\"AGCmap\",\"plot\",\"Fazendas\", \"cod\")\n\n# F849\nF849_5df=as.data.frame(F849_5, row.names=NULL, xy=TRUE,na.rm=TRUE)\nF849shp <- readShapePoly('C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_dados\\\\shape_parcelas\\\\F849\\\\F849.shp')\npts<-SpatialPoints(F849_5df)\nover5 = overlay(pts,F849shp)\ncDataF849<-F849shp@data[over5,]\nF849over5<-na.omit(cbind(F849_5df,cDataF849))\nF849over5<-F849over5[,1:4]\nF849over5<-cbind(F849over5,rep(\"F849\",nrow(F849over5)),paste0(\"F849\",F849over5$Id))\ncolnames(F849over5)<-c(\"x\",\"y\",\"AGCmap\",\"plot\",\"Fazendas\", \"cod\")\n\n# F950\nF950_5df=as.data.frame(F950_5, row.names=NULL, xy=TRUE,na.rm=TRUE)\nF950shp <- readShapePoly('C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_dados\\\\shape_parcelas\\\\F950\\\\F950.shp')\npts<-SpatialPoints(F950_5df)\nover5 = overlay(pts,F950shp)\ncDataF950<-F166shp@data[over5,]\nF950over5<-na.omit(cbind(F950_5df,cDataF950))\nF950over5<-F950over5[,1:4]\nF950over5<-cbind(F950over5,rep(\"F950\",nrow(F950over5)),paste0(\"F950\",F950over5$Id))\ncolnames(F950over5)<-c(\"x\",\"y\",\"AGCmap\",\"plot\",\"Fazendas\", \"cod\")\n\n# F948\nF948_5df=as.data.frame(F948_5, row.names=NULL, xy=TRUE,na.rm=TRUE)\nF948shp <- readShapePoly('C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_dados\\\\shape_parcelas\\\\F948\\\\F948.shp')\npts<-SpatialPoints(F948_5df)\nover5 = overlay(pts,F948shp)\ncDataF948<-F948shp@data[over5,]\nF948over5<-na.omit(cbind(F948_5df,cDataF948))\nF948over5<-F948over5[,1:4]\nF948over5<-cbind(F948over5,rep(\"F948\",nrow(F948over5)),paste0(\"F948\",F948over5$Id))\ncolnames(F948over5)<-c(\"x\",\"y\",\"AGCmap\",\"plot\",\"Fazendas\", \"cod\")\n\n# F184\nF184_5df=as.data.frame(F184_5, row.names=NULL, xy=TRUE,na.rm=TRUE)\nF184shp <- readShapePoly('C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_dados\\\\shape_parcelas\\\\F184\\\\F184.shp')\npts<-SpatialPoints(F184_5df)\nover5 = overlay(pts,F184shp)\ncDataF184<-F184shp@data[over5,]\nF184over5<-na.omit(cbind(F184_5df,cDataF184))\nF184over5<-F184over5[,1:4]\nF184over5<-cbind(F184over5,rep(\"F184\",nrow(F184over5)),paste0(\"F184\",F184over5$Id))\ncolnames(F184over5)<-c(\"x\",\"y\",\"AGCmap\",\"plot\",\"Fazendas\", \"cod\")\n\n\n# F166\nF166_5df=as.data.frame(F166_5, row.names=NULL, xy=TRUE,na.rm=TRUE)\nF166shp <- readShapePoly('C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_dados\\\\shape_parcelas\\\\F166\\\\F166.shp')\npts<-SpatialPoints(F166_5df)\nover5 = overlay(pts,F166shp)\ncDataF166<-F166shp@data[over5,]\nF166over5<-na.omit(cbind(F166_5df,cDataF166))\nF166over5<-F166over5[,1:4]\nF166over5<-cbind(F166over5,rep(\"F166\",nrow(F166over5)),paste0(\"F166\",F166over5$Id))\ncolnames(F166over5)<-c(\"x\",\"y\",\"AGCmap\",\"plot\",\"Fazendas\", \"cod\")\n\n# F634\nF634_5df=as.data.frame(F634_5, row.names=NULL, xy=TRUE,na.rm=TRUE)\nF634shp <- readShapePoly('C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_dados\\\\shape_parcelas\\\\F634\\\\F634.shp')\npts<-SpatialPoints(F634_5df)\nover5 = overlay(pts,F634shp)\ncDataF634<-F634shp@data[over5,]\nF634over5<-na.omit(cbind(F634_5df,cDataF634))\nF634over5<-F634over5[,1:4]\nF634over5<-cbind(F634over5,rep(\"F634\",nrow(F634over5)),paste0(\"F634\",F634over5$Id))\ncolnames(F634over5)<-c(\"x\",\"y\",\"AGCmap\",\"plot\",\"Fazendas\", \"cod\")\n\n#\nAGCmap5<-rbind(F986over5,F987over5,F849over5,F950over5,F948over5,F184over5,F166over5,F634over5)\nhead(AGCmap5)\nAGCmeanMap5=tapply(AGCmap5$AGCmap, AGCmap5$cod, mean)\nAGCmeanMap5<-cbind(rownames(AGCmeanMap5),AGCmeanMap5)\ncolnames(AGCmeanMap5)<-c(\"cod\",\"AGCmed\")\nnrow(AGCmeanMap5)\n\nmydata5.0<-read.table(\"Silva_AGC_5.csv\", sep=\",\", header=T)\nmydata5crossMap<-mydata5.0[-as.numeric(keep),]\nmydata5crossMap[,2]<-paste(mydata5crossMap$cod)\nnrow(mydata5crossMap)\nhead(mydata5crossMap)\n\ntotal5<- merge(mydata5crossMap,AGCmeanMap5,by=\"cod\")\ntotal5$AGCmed<-as.numeric(paste(total5$AGCmed))\nnrow(total5)\nhead(total5)\ncor(total5$AGC, total5$AGCmed)\nplot(total5$AGC, as.numeric(total5$AGCmed))\n\n##########\nrequire(raster)\n#Diference\nfolderDif<-\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\03_densidade\\\\00_modelagem\\\\maps\\\\AGCdif\"\n\n#\nFAZ=\"F987\"\nF987dif<-F987_10-F987_5\nplot(F987dif)\nwriteRaster(F987dif,paste0(folderDif,\"\\\\\",FAZ,\"dif.asc\"),overwrite=TRUE)\n\n#\nFAZ=\"F986\"\nF986dif<-F986_10-F986_5\nplot(F987dif)\nwriteRaster(F986dif,paste0(folderDif,\"\\\\\",FAZ,\"dif.asc\"),overwrite=TRUE)\n\n#\nFAZ=\"F849\"\nF849dif<-F849_10-F849_5\nplot(F849dif)\nwriteRaster(F849dif,paste0(folderDif,\"\\\\\",FAZ,\"dif.asc\"),overwrite=TRUE)\n\n#\nFAZ=\"F950\"\nF950dif<-F950_10-F950_5\nplot(F950dif)\nwriteRaster(F950dif,paste0(folderDif,\"\\\\\",FAZ,\"dif.asc\"),overwrite=TRUE)\n\n#\nFAZ=\"F948\"\nF948dif<-F948_10-F948_5\nplot(F948dif)\nwriteRaster(F948dif,paste0(folderDif,\"\\\\\",FAZ,\"dif.asc\"),overwrite=TRUE)\n\n\n#\nFAZ=\"F184\"\nF184dif<-F184_10-F184_5\nplot(F184dif)\nwriteRaster(F184dif,paste0(folderDif,\"\\\\\",FAZ,\"dif.asc\"),overwrite=TRUE)\n\n#\nFAZ=\"F166\"\nF166dif<-F166_10-F166_5\nplot(F166dif)\nwriteRaster(F166dif,paste0(folderDif,\"\\\\\",FAZ,\"dif.asc\"),overwrite=TRUE)\n\n#\nFAZ=\"F634\"\nF634dif<-F634_10-F634_5\nplot(F634dif)\nwriteRaster(F634dif,paste0(folderDif,\"\\\\\",FAZ,\"dif.asc\"),overwrite=TRUE)\n\n\n\n\n\n\n\n \n\n\n\n\n\n",
    "created" : 1421872518463.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2437714473",
    "id" : "CFA9158D",
    "lastKnownWriteTime" : 1418438101,
    "path" : "~/00_Artigos_dissertacao/03_densidade/00_writing/Silva_assignment_FINAL_PAPER.r",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}