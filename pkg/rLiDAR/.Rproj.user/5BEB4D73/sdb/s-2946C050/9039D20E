{
    "contents" : "\ncrown.dir(input)\nrequire(data.table)\n\ncrown.dir<-function(input) {\n  \n  # require grDevices\n  grDevices <- require(grDevices, quietly = TRUE)\n  if (!grDevices) \n    stop(\"Please install package grDevices\")\n\n  \n  class<-data.table(UTM.Easting=input[,1], UTM.Northing=input[,2])\n  hulls <- class[chull(UTM.Easting, UTM.Northing)]\n  hulls<-as.data.frame(hulls)  \n  set.seed(1)\n  get.cl <- kmeans(input[,1:2],1)\n  cluster.tree.c<-get.cl$center \n  colnames(cluster.tree.c)<-c(\"UTM.Easting\",\"UTM.Northing\")\n  \n  deltax<- (hulls[,1] - cluster.tree.c[1])\n  deltax.pos<-max(deltax)\n  deltax.neg<-min(deltax)\n  crown.x<-(deltax.pos + (-deltax.neg))\n  \n  deltay<- (hulls[,2] - cluster.tree.c[2])\n  deltay.pos<-max(deltay)\n  deltay.neg<-min(deltay)\n  crown.y<-(deltay.pos + (-deltay.neg))\n  crown.rad<-(mean(crown.x, crown.y))/2\n  crown<-cbind(cluster.tree.c,crown.x,crown.y,crown.rad)\n  round(crown, digits=2)\n  \n}\n\n#---------------------------------------------------------------------------#\n\n#---------------------------------------------------------------------------#\n################### # tree hieght, Intensity, Crown estimation# #############\n#---------------------------------------------------------------------------# \nrequire(moments)\nxyz.c<-cbind(input[,1:3],input[,11])\ncolnames(xyz.c)<-c(\"x\",\"y\",\"z\",\"TreeID\")\n\na=rMetrics(input)\nncol(a)\n\nhead(a)  \n\nrMetrics<-function(input) {  \n  LiDARmetrics<-matrix(,ncol=36)[-1,]\n  \n  N<-nlevels(factor(input[,11]))\n  \n  for ( i in 1:N){\n    print(i)\n  xyz.c<-subset(input[,1:3],input[,11]==i)\n  \n  if (nrow(xyz.c) <= 2) { next} else {\n    \n  Metrics<-c( crown.dir(xyz.c), # tree crown\n        \n        # hiegh metrics\n        npoits<-round(nrow(xyz.c), digits=2),\n        hmax=round(max(xyz.c[,3]), digits=2),\n        hmin=round(min(xyz.c[,3]), digits=2),\n        hmean=round(mean(xyz.c[,3]),digits=2),\n        hmedian=round(median(xyz.c[,3]),digits=2),\n        hmode = round(as.numeric(names(table(xyz.c[,3]))[which.max(table(xyz.c[,3]))]), digits=2),\n        hvar=round(var(xyz.c[,3]),digits=2),\n        hsd=round(sd(xyz.c[,3]),digits=2),\n        hcv=round((sd(xyz.c[,3])/mean(xyz.c[,3]))*100,digits=2),\n        hkurtosis=round(kurtosis(xyz.c[,3]),digits=2),\n        hskewness=round(skewness(xyz.c[,3]),digits=2),\n        h5=round(quantile(xyz.c[,3],0.05),digits=2),\n        h10=round(quantile(xyz.c[,3],0.1),digits=2),\n        h15=round(quantile(xyz.c[,3],0.15),digits=2),\n        h20=round(quantile(xyz.c[,3],0.20),digits=2),\n        h25=round(quantile(xyz.c[,3],0.25),digits=2),\n        h30=round(quantile(xyz.c[,3],0.30),digits=2),\n        h35=round(quantile(xyz.c[,3],0.35),digits=2),\n        h40=round(quantile(xyz.c[,3],0.40),digits=2),\n        h45=round(quantile(xyz.c[,3],0.45),digits=2),\n        h50=round(quantile(xyz.c[,3],0.50),digits=2),\n        h55=round(quantile(xyz.c[,3],0.55),digits=2),\n        h60=round(quantile(xyz.c[,3],0.60),digits=2),\n        h65=round(quantile(xyz.c[,3],0.65),digits=2),\n        h70=round(quantile(xyz.c[,3],0.70),digits=2),\n        h75=round(quantile(xyz.c[,3],0.75),digits=2),\n        h80=round(quantile(xyz.c[,3],0.85),digits=2),\n        h90=round(quantile(xyz.c[,3],0.90),digits=2),\n        h95=round(quantile(xyz.c[,3],0.95),digits=2),\n        h99=round(quantile(xyz.c[,3],0.99),digits=2))\n  \n  LiDARmetrics<-rbind(LiDARmetrics,c(i,Metrics))\n  }}\n\ncolnames(LiDARmetrics)<-c(\"tree\",\"xcoor\",\"ycoor\",\"crown.x\",\"crown.y\",\"crown.rad\",\"npoints\",\"hmax\",\"hmin\",\"hmean\",\"hmedian\",\"hmode\",\n                                 \"hvar\",\"hsd\",\"hcv\",\"hkurtosis\",\"hskewness\",\"h5\",\"h10\",\"h15\",\"h20\",\"h25\",\"h30\",\"h35\",\"h40\",\n                                 \"h45\",\"h50\",\"h55\",\"h60\",\"h65\",\"h70\",\"h75\",\"h80\",\"h90\",\"h95\",\"h99\")\nreturn(LiDARmetrics)\n}\n \nexport<-cbind(VolumeList,a[,-1])\nexport<-cbind(a[,1:3],a[,-1])\n\nhead(export)\nwrite.table(export,\"C:\\\\Users\\\\Carlos\\\\Documents\\\\3DVolume\\\\PanamaBCI_mycentered_myrot_norm_100x100_1_Plot_z_2_BW_8_8_MS_ClassVolume.csv\")\n\nrequire(rLiDAR)\n??rLiDAR\n\nopen3d()\nfor( i in 1:nrow(export)){\n  if (export[i,10] <= 15) {col=\"yellow\"}\n  if (export[i,10] > 15 & export[i,10] <= 20) {col=\"red\"}\n  if (export[i,10] >= 21) {col=\"forestgreen\"}\n  \n  LiDARtrees3D(crownshape = \"ellipsoid\", CL = export[i,10]*0.6, CW = export[i,8]*2,\n               HCB = export[i,10]*0.4, X = export[i,4], Y = export[i,5], dbh = 0.4,\n               crowncolor =col, stemcolor = \"chocolate4\",\n               resolution=\"high\", mesh=T)\n}\naxes3d(c(\"x-\", \"y+\",\"z\"), col=\"black\")\n#planes3d(a=0,b=0,c=-1,d=0.0001,color=\"gray\",alpha=1)\ngrid3d(side=c('x-', 'y+', 'z'), col=\"gray\")\ntitle3d(xlab = \"UTM Easthing\", ylab = \"UTM Northing\",zlab = \"Height\", col=\"red\")\naspect3d(1,1,0.4/1)\naspect3d(1,1,0.4)  \n",
    "created" : 1423460111741.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "986571767",
    "id" : "9039D20E",
    "lastKnownWriteTime" : 1424248713,
    "path" : "~/3DVolume/metrics.r",
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled31"
    },
    "source_on_save" : false,
    "type" : "r_source"
}