{
    "contents" : "#'Compute 2D convex hull of LiDAR point cloud \n#'\n#'@description Compute and export the ground-projected convex hull of LiDAR point cloud \n#'\n#'@usage chullLiDAR(xyid)\n#'\n#'@param xyid A 3-column matrix with the x, y coordinates and points id of the LiDAR point cloud.\n#'@return Returns A list with components \"chullPolygon\" and \"chullArea\", giving the polygon and area  of the convex hull.  \n#'@author Carlos Alberto Silva\n#'@references \\emph{grDevices} package,see \\code{\\link[grDevices]{chull}}.\n#'@examples\n#'\\dontrun{\n#'\n#'# Importing LAS file:\n#'LASfile <- system.file(\"extdata\", \"LASexample1.las\", package=\"rLiDAR\")\n#'\n#'# Reading LAS file\n#'LAS<-readLAS(LASfile,short=TRUE)\n#'\n#'# Height subsetting the data\n#'xyz<-subset(LAS[,1:3],LAS[,3] >= 1.37)\n#'\n#'# Getting LiDAR clusters\n#'set.seed(1)\n#'clLAS<-kmeans(xyz, 32)\n#'\n#'# Set the points id \n#'id<-as.factor(clLAS$cluster)\n#'\n#'# Set the xyid input\n#'xyid<-cbind(xyz[,1:2],id)\n#'\n#'# Compute the LiDAR convex hull of the clusters \n#'chullTrees<-chullLiDAR(xyid)\n#'\n#'# Plotting the LiDAR convex hull\n#'plot(SpatialPoints(xyid[,1:2]),cex=0.5,col=xyid[,3])\n#'plot(chullTrees$chullPolygon,add=T, border='green')\n#'\n#'# Get the ground-projected area of LiDAR convex hull\n#'chullList<-chullTrees$chullArea \n#'summary(chullList)     # summary \n#'} \n#'@export\nchullLiDAR<-function(xyid) {\n  \n  spdfList<-list()\n  for ( i in levels(factor(xyid[,3]))) {\n    \n    subSet<-subset(xyid,xyid[,3]==i)\n    dat<-subSet[,1:2]\n    ch <- chull(dat)\n    coords <- dat[c(ch, ch[1]), ]  \n    sp_poly <- SpatialPolygons(list(Polygons(list(Polygon(coords)), ID=i)))\n    spdfList[i]<-SpatialPolygonsDataFrame(sp_poly, data=data.frame(subSet[1,1], row.names=row.names(sp_poly)))\n    \n  } \n    \n  polygons <- slot(spdfList[[1]], \"polygons\")\n  \n  for (i in levels(factor(xyid[,3]))) {\n    data.loc <- spdfList[[i]]\n    polygons <- c(slot(data.loc, \"polygons\"),polygons)\n  }\n  \n  for (i in 1:length(polygons)) {\n    slot(polygons[[i]], \"ID\") <- paste(i)\n    cat (\".\");flush.console()\n  }\n  \n  spatialPolygons <- SpatialPolygons(polygons)\n  spdf <- SpatialPolygonsDataFrame(spatialPolygons, \n                                   data.frame(Trees=1:length(polygons)))\n  \n  options(scipen=4)\n  spdf<-spdf[spdf@data[-length(polygons),],]\n  areaList<-as.numeric(sapply(slot(spdf, \"polygons\"), slot, \"area\"))\n  canopyTable<-data.frame(cbind(as.numeric(levels(factor(xyid[,3]))),areaList))\n  colnames(canopyTable)<-c(\"TreeID\",\"GPA\")\n  return(list(chullPolygon=spdf,chullArea=canopyTable)) \n      \n}\n\n",
    "created" : 1425978191653.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2866976870",
    "id" : "1CFAAE39",
    "lastKnownWriteTime" : 1425978203,
    "path" : "~/rLiDAR/rLiDAR/R/chullLiDAR.r",
    "project_path" : "R/chullLiDAR.r",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}