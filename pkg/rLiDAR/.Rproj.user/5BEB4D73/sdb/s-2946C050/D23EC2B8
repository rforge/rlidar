{
    "contents" : "\nrequire(rgdal)\nrequire(rgl)\nrequire(raster)\n\n# import\n# example 01\ndata<-read.table(\"C:\\\\Users\\\\Carlos\\\\Downloads\\\\Trees2014-10-26.csv\",sep=\",\", head=T)\ndtm<-readGDAL(\"C:\\\\00_ForestCAS\\\\07_ExampleData\\\\00_las\\\\demo_4800K_UTM_dtm.asc\")\n\nprojection_chmASCII<-projection(dtm)\ndecTREE<-SpatialPoints(data[,2:3])\nprojection(decTREE)<-projection_chmASCII\ntreesOver<-over(decTREE,dtm)\ndata<-cbind(data,treesOver)\n\nnrow(data)\n\ncol1<-sample(c(\"dark green\",\"darkolivegreen\",\"forestgreen\"),70,T)\ncol2<-sample(c(\"forestgreen\",\"red\"),70,T)\ncol<-cbind(col1,col2)\n\n\ncol<-sample(c(\"green4\",\"darkolivegreen\",\"forestgreen\"),70,T)\ncol2<-rep(\"blue\",70)\n\n\n\nrequire(raster)\nrequire(persp3d)\nplotDTM(dtm,col=\"gray\", alpha=0.7, aspect=c(1,1,0.01))\n\nfor (i in 1:nrow(data)) {\n  TreesPlot(\"halfellipsoid\",col=col[i,], nz=15, nalpha=15,data[i,4]*0.8,data[i,5],data[i,2],data[i,3],data[i,7],data[i,4]*0.2,data[i,4],-0.5)\n}\naxes3d(c(\"x-\", \"y-\",\"z-\"), col=\"gray\")\ntitle3d(xlab = \"UTM.Easting\", ylab = \"UTM.Northing\", col=\"black\")\n\nplanes3d(a=0,b=0,c=-1,d=0.0001,color=\"gray\",alpha=1)\naspect3d(1,1,0.5)\n\n# example 02\ndata<-read.table(\"C:\\\\00_ForestCAS\\\\07_ExampleData\\\\00_las\\\\Individual_tree_file_treelist.csv\",sep=\",\", head=T)\ndtm<-readGDAL(\"C:\\\\00_ForestCAS\\\\07_ExampleData\\\\00_las\\\\4800K_dtm.asc\")\nplot(raster(dtm))\n\nprojection_chmASCII<-projection(dtm)\ndecTREE<-SpatialPoints(data[,1:2])\nprojection(decTREE)<-projection_chmASCII\ntreesOver<-over(decTREE,dtm)\ndata<-cbind(data,treesOver)\n\nplotDTM(dtm,col=\"gray\", alpha=0.7, aspect=c(1,1,0.01))\n\nrequire(rgl)\nhead(data)\nfor (i in 1:nrow(data)) {\n  TreesPlot(\"halfellipsoid\",col=col1[i], nz=25, nalpha=25,data[i,5],data[i,6],data[i,1],data[i,2],data[i,8],data[i,4]-data[i,5],data[i,4],-0.5)\n}\naxes3d(c(\"x-\", \"y-\"), col=\"gray\")\ntitle3d(xlab = \"UTM.Easting\", ylab = \"UTM.Northing\", col=\"black\")\n\nplanes3d(a=0,b=0,c=-1,d=0.0001,color=\"gray\",alpha=1)\naspect3d(1,1,0.5)\n\n\nTreesPlot<- function(crownshape=c(\"cone\",\"ellipsoid\",\"halfellipsoid\",\"paraboloid\",\"cylinder\"),col=c(\"dark green\",\"darkolivegreen\"),\n                     nz=5, nalpha=5, CL=1, CW=1, x0=0, y0=0,z0=0, CBH=0,Ht=10,lsd=-1,aspect=c(1,1,0.01)\n){\n  \n  if ((nlevels(factor(lsd!=c(-0.5,0,0.5)))!=2)) {stop(\"Parameter lsd is invalid!Please, try again using -0.5,0 or 0.5\")}\n  #slp=function(z,mat)\n  #{\n\n  \n  #if(i =< mat[1,1]) return(mat[1,2]) \n  #if(i >= mat[3,1]) return(mat[1,2]) \n  #if(i >= mat[nrow(mat),1]) return(mat[nrow(mat),2])\n  \n  \n#}\n  #nz=5; nalpha=5; CL=5; CW=15; x0=0; y0=0; z0=0;\n  #CBH<-30\n  crownshape <- match.arg(crownshape)\n  \n  z <- rep(seq(0,1,length=nz),each=nalpha)\n  angs <- rep(seq(0,2*pi, length=nalpha),nz)\n  \n  # Taken from SURFACE subroutine in MAESTRA.\n  if(crownshape == \"cone\")distfun <- (1-z)\n  if(crownshape == \"ellipsoid\")distfun <- sqrt(1 - ((z-1/2)^2)/((1/2)^2))\n  if(crownshape == \"halfellipsoid\")distfun <- sqrt(1 - z**2)\n  if(crownshape == \"paraboloid\")distfun <- sqrt(1-z)\n  if(crownshape == \"cylinder\")distfun <- 1\n  if(crownshape == \"freeform\")distfun <- slp(z,mat)\n  \n  \n  r <- CW/2\n  x <- x0 + r*distfun*cos(angs)\n  y <- y0 + r*distfun*sin(angs)\n  z <- z0 + CBH + z*CL\n  \n  keep <- !duplicated(cbind(x,y,z))\n  x <- x[keep]\n  y <- y[keep]\n  z <- z[keep]\n  klj=matrix(cbind(x,y,z),ncol=3)\n  \n  NewList<-matrix(,ncol=3)[-1,]\n  \n  \n  for ( k in 1:nrow(klj)){\n    \n    NewList<-rbind(NewList,rbind(klj[k,],c(x0,y0,klj[k,3]+lsd)))\n    #segments3d(rbindList,col=\"forestgreen\",lwd=5)\n  }\n  \n  bg3d(\"white\")\n  \n  plot3d(NewList, type=\"l\", col=sample(col,nrow(NewList),TRUE), add=T)\n  aspect=aspect\n  m2 <- coord3dshape(\"cone\", CW = 0.5, CL = Ht, z0 = z0, x0 = x0, \n                     y0 = y0, nz = 50, nalpha = 50)\n  #require(geometry)\n  interpol(m2, col = \"chocolate4\")\n  \n}\n\n\nrequire(geometry)                 \n\n\nplotDTM<-function(dtm,col=\"gray\", alpha=0.7, aspect=c(1,1,0.01),xlab=\"\",ylab=\"\",zlab=\"\"){\n  \n  DTMr<-raster(dtm)\n  \n  cellsize<-res(DTMr)\n  \n  coord<-xyFromCell(DTMr,1:ncell(DTMr))\n  \n  xseq <- seq(min(coord[,1]),max(coord[,1]),cellsize[1])\n  yseq <- seq(min(coord[,2]),max(coord[,2]),cellsize[2])\n  zseq<-as.matrix(dtm)\n  \n  persp3d(xseq, yseq, zseq, col=col, alpha=alpha, aspect=aspect, axes=FALSE, xlab=xlab,ylab=ylab,zlab=zlab)\n  \n}\n\nplotDTM(dtm,col=\"gray\", alpha=0.7, aspect=c(1,1,0.01))\ngrid3d(c(\"x\", \"y+\", \"z\"))\n\n\ncoord3dshape <- function(crownshape=c(\"cone\",\"ellipsoid\",\"halfellipsoid\",\"paraboloid\",\"cylinder\"),\n                         nz=5, nalpha=5, CL=1, CW=1, x0=0, y0=0, z0=0\n){\n  \n  #nz=50; nalpha=50; CL=5; CW=15; x0=0; y0=0; z0=0;\n  \n  crownshape <- match.arg(crownshape)\n  \n  z <- rep(seq(0,1,length=nz),each=nalpha)\n  angs <- rep(seq(0,2*pi, length=nalpha),nz)\n  \n  # Taken from SURFACE subroutine in MAESTRA.\n  if(crownshape == \"cone\")distfun <- (1-z)\n  if(crownshape == \"ellipsoid\")distfun <- sqrt(1 - ((z-1/2)^2)/((1/2)^2))\n  if(crownshape == \"halfellipsoid\")distfun <- sqrt(1 - z**2)\n  if(crownshape == \"paraboloid\")distfun <- sqrt(1-z)\n  if(crownshape == \"cylinder\")distfun <- 1\n  \n  r <- CW/2\n  x <- x0 + r*distfun*cos(angs)\n  y <- y0 + r*distfun*sin(angs)\n  z <- z0 + z*CL\n  \n  keep <- !duplicated(cbind(x,y,z))\n  x <- x[keep]\n  y <- y[keep]\n  z <- z[keep]\n  #klj=matrix(cbind(x,y,z),ncol=3)\n  #plot3d(klj)\n  return(matrix(cbind(x,y,z),ncol=3))\n}\n\ninterpol<- function(input,col) {\n  surf.3d <- t(convhulln(input,options = \"QJ\")) \n  \n  rgl.triangles(input[surf.3d,1],input[surf.3d,2],input[surf.3d,3],col=col,alpha = c(1.0),\n                lit = TRUE,ambient = \"black\",specular = \"white\",emission = \"black\",shininess = 50.0,\n                smooth = TRUE, texture = NULL,front = \"fill\",back =\"fill\",fog = F) \n  \n}\n\n\n\n",
    "created" : 1414628773257.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4081354919",
    "id" : "D23EC2B8",
    "lastKnownWriteTime" : 1417404865,
    "path" : "~/3dTreesR/3dtreesDTM_final.R",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}