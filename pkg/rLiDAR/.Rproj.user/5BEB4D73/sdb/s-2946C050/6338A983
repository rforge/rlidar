{
    "contents" : "\n# file 01\ninput<-read.table(\"C:\\\\Users\\\\Carlos\\\\Documents\\\\3DVolume\\\\Figures\\\\PanamaBCI_mycentered_myrot_norm_100x100_16_Plot_z_2_Fz_4_Class_noEdge.txt\", sep=\"\", head=F)\nhead(input)\nplot3d(input[,1:3], col=input[,ncol(input)-1], axes=F, xlab=\"\",ylab=\"\",zlab=\"\")\n\nVolumeList<-matrix(,ncol=3)[-1,]\ncolnames(VolumeList)<-c(\"TreeID\",\"crownvolume\",\"crownsurface\")\nN<-nlevels(factor(input[,11]))\n\nfor ( i in 1:N) {\n  print(i)\n  xyz<-subset(input[,1:3],input[,11]==i)\n  \n  if (nrow(xyz) <= 3) {crownvolume=0;crownsurface=0} else {\n  \n  volume<-crownhull(xyz,plotit=TRUE,col=i, alpha=0.8) \n  crownvolume<-as.numeric(volume[1])\n  crownsurface<-as.numeric(volume[2]) }\n  VolumeList<-rbind(VolumeList,cbind(i,crownvolume,crownsurface))\n}\n\ngetwd()\nwrite.table(VolumeList,\"C:\\\\Users\\\\Carlos\\\\Documents\\\\3DVolume\\\\PanamaBCI_mycentered_myrot_norm_100x100_1_Plot_z_2_BW_8_8_MS_ClassVolume.csv\")\n  \naxes3d(c(\"x+\", \"y-\",\"z\"), col=\"black\")\n#planes3d(a=0,b=0,c=-1,d=0.0001,color=\"gray\",alpha=1)\ngrid3d(side=c('x+', 'y-', 'z'), col=\"gray\")\ntitle3d(xlab = \"UTM Easthing\", ylab = \"UTM Northing\",zlab = \"Height\", col=\"red\")\naspect3d(1,1,0.4/1)\naspect3d(1,1,0.6)  \n?grid3d  \n  \n  \n  \n# function volume\n\ncrownhull <- function(xyz, plotit=TRUE,col=\"forestgreen\", alpha=0.8){\n\n  if(inherits(xyz, \"plant3d\"))\n    xyz <- do.call(\"rbind\", lapply(xyz$leaves, function(x)x$XYZ))\n  \n  # construct the hull (gives area and volume)\n  if(is.list(xyz) && !is.data.frame(xyz))\n    p <- as.matrix(do.call(\"rbind\", xyz))\n  else\n    p <- as.matrix(xyz)\n  \n  ch <- convhulln(p, \"FA\")\n  \n  # construct the hull for plotting\n  if(plotit){\n    ch2 <- t(convhulln(p, \"Qt\"))\n    triangles3d(p[ch2,1],p[ch2,2],p[ch2,3],col=col,alpha=alpha)\n  }\n  \n  return(list(crownvolume=ch$vol, crownsurface=ch$area))\n}\n\n# test real\nxyz<-cbind(x=c(0,0,0,0,1,1,1,1),y=c(0,1,0,1,0,1,0,1),z=c(0,0,1,1,0,0,1,1))\nplot3d(xyz)\n\n\nif (Trunk==TRUE){\n  tree.height=ddply(input, 'Trees', function (input) max(input[,3])) \n  set.seed(1)\n  cl <- kmeans(input[,1:2],N)\n  names(cl) # names\n  input$cluster <- as.factor(cl$cluster)\n  #plot3d(xyz.c, col=xyz.c$cluster)\n  cluster.c<-as.data.frame(cl$center);round(cluster.c, digits=10)\n  locTree<-cbind(cluster.c,tree.height[,2])\n  \n  for ( i in 1:N) {\n    vec=rbind(c( locTree[i,1], locTree[i,2], 0 ), c( locTree[i,1], locTree[i,2], locTree[i,3]) )\n    segments3d(vec, col=TrunkCOL, lwd=TrunkDiam)}\n} else { segments3d(rbind(c(borig$x[1,1],borig$x[1,2],0),c(rbind(c(borig$x[1,1],borig$x[1,2],0)))))}\n}",
    "created" : 1423454526409.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2963799898",
    "id" : "6338A983",
    "lastKnownWriteTime" : 1425971938,
    "path" : "~/3DVolume/R.script3Dvolume.R",
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled31"
    },
    "source_on_save" : false,
    "type" : "r_source"
}