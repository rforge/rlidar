{
    "contents" : "\ngetwd()\nsource(\"C:\\\\rLiDAR-tree\\\\00_install.rLiDAR-tree\\\\00_functions\\\\functions\\\\readLAS.R\")\nfile=\"H:\\\\00_LiDAR\\\\00_LiDAR_projetos\\\\00_Klabin\\\\03_RSdata\\\\00_LiDAR\\\\MA02BCE_cerradinho\\\\LIDAR\\\\MA02BCE_cerradinho_NP\\\\MA02BCE_cerradinho_NP_7.las\"\n\nrequire(rLiDAR)\nfile=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\DISSERTACAO\\\\00_LiDAR_Fibria\\\\Dados_LAS\\\\F987_LIDAR\\\\LIDAR_10pts\\\\processing\\\\polyclipdata\\\\Parcelas_1.las\"\nLASfile=file\nrequire(bitops)\nLAS<-readLAS(file, short=T)\nhead(LAS)\n?readLAS\nplot(LAS)\nhead(LAS)\nsummary(LAS)\nlevels(factor(LAS[,9]))\nhead(LAS)\nsummary(LAS)\nhealp\nminht<-1.37\nabove<-2\n\n\nll<-\"C:\\\\00_ForestCAS\\\\07_ExampleData\\\\00_las\\\\Eglin.plots_1.las\"\n\nrrp=readLAS(ll,TRUE)\n\nrequire(rLiDAR)\nfolder<-\"C:\\\\00_ForestCAS\\\\07_ExampleData\\\\00_las\"\nfolder=\"../lasfolder\"\nLASlist <- list.files(folder, pattern=\"*.las\", full.names=TRUE)\nLiDARmetricsList<-data.frame()\nfor ( i in LASlist[-1] ) {\n  LiDARmetricsList<-rbind(LiDARmetricsList,LASmetrics(i,1.37,2))\n}\n\n?LASmetrics\nhead(LAS)\nsummary(LAS)\nrequire(rLiDAR)\n\n\nlibrary(tools)\n?rLiDAR\nls()\nrm(\"readLAS\")\nrm(\"LASmetrics\")\n\nls()\n\nnewdata=c(9,10,15,22,19,22,30)\n\nsave(LASfile,file=\"LASfile.rda\")\nsave(LASfile, file=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\rLiDAR\\\\rLiDAR\\\\LASfile.rda\")\nprompt(LASfile)\nprompt()\nrm()\n\nls()\n\nsummary(LAS)\n\nLAS<-read.table(\"C:\\\\Users\\\\Carlos\\\\Dropbox\\\\00_LiDAR_sharing2013\\\\00_LiDAR_working\\\\02_paper3_individual_tree_3DAMS\\\\00_lasfiles\\\\plot3.txt\", sep=\",\", head=T)\n\nLAS<-subset(LAS,LAS[,3]>=1.37)\nhist(LAS$z, breaks=\"FD\", freq = FALSE, col=rgb(0.75,0.75,0.75),\n     ylab = \"Probability density\",\n     xlab = \"x\", xlim=c(0,max(LAS$z)+5),\n     main = paste('Normal Distribution'))\ndensityLAS=density(LAS$z)\nlines(densityLAS,lwd=2)\n\nplot(densityLAS$x,densityLAS$y)\ndensityLAS$y\n\n\n\nk<-NULL\nZ<-NULL\nD<-NULL\n\nfor ( i in 1:length(densityLAS$x)){\nk[i+1]<-densityLAS$x[i+1] - densityLAS$x[i]\nZ[i+1]<-densityLAS$y[i+1] - densityLAS$y[i]\nD[i+1]<-sqrt((Z[i+1]/k[i+1])^2)\n\n}\n\nmaxList=cbind(densityLAS$x,densityLAS$y,D)\n\nmaxList=subset(maxList,maxList[,1]>=0)\n\nmaxPoint<-subset(maxList, maxList[,3]== max(maxList[,3], na.rm=TRUE))\ncolnames(maxPoint)<-c(\"x\",\"y\",\"z\")\n\ndensy<-cbind(densityLAS$x,densityLAS$y,\"black\",.5)\n\njh<-rbind(densy,c(maxPoint[-3],\"red\",1))\n\nplot(jh[,1:2], col=jh[,3],cex =as.numeric(jh[,4]))\n\np=pi*11.3^2\n\nclLAS<-kmeans(LAS[,3], 32)\nxyz<-LAS[,1:3]\n\n# set the id vector\nid<-as.factor(clLAS$cluster)\n\n# set the alpha\nalpha<-0.25\n\n# set the cas parameter\ncas=TRUE\n\n# get the volume\nvolume<-getVolume5(xyz=xyz,id=id,alpha=alpha,cas=cas)\nhead(volume)\n\n\ngetVolume5<-function(xyz,id,alpha,cas) {\n  \n  if (nrow(xyz)!=length(id)) {stop(\"The xyz and id do not have the same length\")}\n  if (cas!=TRUE & cas!=FALSE) {stop(\"The cas parameter is invalid. Please, use TRUE or FALSE\")}\n  \n  xrange1<-range(xyz[,1])\n  yrange2<-range(xyz[,2])\n  ntree<-as.factor(id)\n  N<-nlevels(as.factor(ntree))\n  \n  xyzid<-cbind(xyz,id)\n  \n  repmat = function(X,m,n){\n    mx = dim(X)[1]\n    nx = dim(X)[2]\n    matrix(t(matrix(X,mx,nx*n)),mx*m,nx*n,byrow=T)\n  }\n  \n  allc<-numeric(3)\n  len=numeric()\n  suppressWarnings(\n    for (i in 1:N) {\n      len[i]=dim(subset(xyzid,xyzid[,4]==i))\n      allc<-rbind(allc,subset(xyzid, xyzid[,4]==i))\n      \n    })\n  allc<-allc[-1,1:3]\n  allc<-na.omit(rbind(allc,allc,allc))\n  \n  \n  real_range=diff(apply(allc,2,range))\n  all_scaled1=allc-repmat(t(as.matrix(apply(allc,2,min))),nrow(allc),1)\n  all_scaled=all_scaled1/repmat(t(as.matrix(apply(all_scaled1,2,max))),nrow(all_scaled1),1)\n  \n  alpha <- rep(alpha,N) \n  cuts<-c(0,cumsum(len)) \n  v<-numeric()\n  volume_final<-numeric()\n  \n  for (i in 1:N){\n    obs<-all_scaled[(cuts[i]+1):cuts[i+1],] \n    b=ashape3d(as.matrix(obs),alpha=alpha[i],pert = TRUE, eps = 1e-09) \n    borig<-b \n    borig$x<-borig$x*repmat(t(as.matrix(apply(all_scaled1,2,max))),len[i],1)\n    borig$x<-borig$x+repmat(t(as.matrix(apply(allc,2,min))),len[i],1)\n    if (cas==TRUE) {\n     # bg3d(\"white\")\n      plot(borig,indexAlpha = \"all\",clear=FALSE,col=rep(i,N),transparency = 1)}\n    v[i]=volume_ashape3d(b)\n    volume_final[i]=prod(v[i],real_range)\n  }\n  volume3d.trees<-NULL\n  \n  for( i in 1:N) {\n    volume3d.trees[i]<-(volume_final[i]) \n  }\n  volume3d.trees<-cbind(id=as.numeric(levels(factor(id))),V=round(volume3d.trees, digits=2))\n  colnames(volume3d.trees)<-c(\"id\",\"V\")\n  \n  return(volume3d.trees)\n}\n",
    "created" : 1412963334825.000,
    "dirty" : true,
    "encoding" : "",
    "folds" : "",
    "hash" : "4186342375",
    "id" : "621E62EF",
    "lastKnownWriteTime" : 1412890441,
    "path" : null,
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled6"
    },
    "source_on_save" : false,
    "type" : "r_source"
}