{
    "contents" : "#'Individual tree LiDAR 3D canopy volume and surface area\n#'\n#'@description Compute and plot the convex hull (and its surface area and volume)\n#' of the individual tree LiDAR 3D point could.The convex hull is calculated with \n#' the qhull algorithm (\\emph{geometry} package,see \\code{\\link[geometry]{convhulln}}).\n#'\n#'@usage Volume3D(xyzid,plotit=TRUE,col=\"forestgreen\",alpha=0.8)\n#'\n#'@param xyzid A matrix with four columns (xyz coordinates and tree id).\n#'@param plotit Logical. If FALSE, returns only volume and surface area.\n#'@param col A vector or a caracter of the convex hull color.\n#'@param alpha A vector or a caracter of the convex hull transparency (0-1).\n#'@return A list with components 'crownvolume' and 'crownsurface', giving the\n#'volume and surface of the convex hull.\n#'@author Carlos Alberto Silva. Uses code by Remko Duursma (\\emph{YplantQMC} package,see \\code{\\link[YplantQMC]{crownhull}}). \n#'@references \\url{www.qhull.org}\n#'\n#'@examples\n#'\n#'\\dontrun{\n#'\n#'# Importing LAS file:\n#'LASfile <- system.file(\"extdata\", \"LASexample1.las\", package=\"rLiDAR\")\n#'\n#'# Reading LAS file\n#'LAS<-readLAS(LASfile,short=TRUE)\n#'\n#'# Setring the xyz coordinates and subsetting the data\n#'xyz<-subset(LAS[,1:3],LAS[,3] >= 1.37)\n#'\n#'# Finding clusters\n#'clLAS<-kmeans(xyz, 32)\n#'\n#'# Set the id vector\n#'id<-as.factor(clLAS$cluster)\n#'\n#'#=================================================#\n#'# Example 01\n#'#=================================================#\n#'# Set the alpha\n#'alpha<-0.6\n#'\n#'# Set the plotCAS parameter\n#'plotit=TRUE\n#'\n#'# Set the convex hull color\n#'col=\"forestgreen\"\n#' \n#'# Combining xyz and id\n#'xyzid<-cbind(xyz,id)\n#' \n#'# Get the volume and surface area\n#'open3d() \n#'volumeList<-Volume3D(xyzid=xyzid, plotit=plotit, col=col,alpha=alpha)\n#'summary(volumeList)\n#'\n#'axes3d(c(\"x+\", \"y-\",\"z\"), col=\"black\")        # axes\n#'grid3d(side=c('x+', 'y-', 'z'), col=\"gray\")   # grid\n#'title3d(xlab = \"UTM Easthing\", ylab = \"UTM Northing\",zlab = \"Height\", col=\"red\")\n#'aspect3d(1,1,0.7) # scale\n#'\n#'#=================================================#\n#'# Example 02\n#'#=================================================#\n#'# Set the alpha\n#'alpha<-0.85\n#'\n#'# Set the plotCAS parameter\n#'plotit=TRUE\n#'\n#'# Set the convex hull color\n#'col=levels(factor(id))\n#' \n#'# Combining xyz and id\n#'xyzid<-cbind(xyz,id)\n#' \n#'# Get the volume and surface area\n#'open3d() \n#'volumeList<-Volume3D(xyzid=xyzid, plotit=plotit, col=col,alpha=alpha)\n#'summary(volumeList)\n#'\n#'# Add other plot parameters\n#'axes3d(c(\"x+\", \"y-\",\"z\"), col=\"black\")        # axes\n#'grid3d(side=c('x+', 'y-', 'z'), col=\"gray\")   # grid\n#'title3d(xlab = \"UTM Easthing\", ylab = \"UTM Northing\",zlab = \"Height\", col=\"red\")\n#'aspect3d(1,1,0.7) # scale\n#'\n#'}\n#'@importFrom rgl triangles3d\n#'@importFrom geometry convhulln\n#'@export\nVolume3D<-function(xyzid,plotit=TRUE,col=\"forestgreen\", alpha=0.8) {\n\n  VolumeList<-matrix(,ncol=3)[-1,]\n  nlevels<-as.numeric(levels(factor(xyzid[,4])))\n  \n  for ( i in nlevels) {\n    \n    xyz<-subset(xyzid[,1:3],xyzid[,4]==i)\n    \n    if (nrow(xyz) <= 4) {crownvolume=0;crownsurface=0} else {\n      \n      \n      if (plotit==TRUE) {\n        if (length(col) == 1) {col2=col} \n          else { \n            if (length(nlevels)==length(col)) {col2=col[i]} \n              else { stop(cat(\"The col parameter doesn't has the same the lenght number of trees.\")) }}\n        if (length(alpha) == 1) {alpha2=alpha} \n            else { \n              if (length(nlevels)==length(alpha)) {alpha2=alpha[i]} \n                else { stop(cat(\"The alpha parameter doesn't has the same the lenght of number of trees.\")) }}\n              \n        cat (\".\");flush.console()\n        volume<-crownhull(xyz,plotit=TRUE,col=col2, alpha=alpha2)\n      \n      } else {\n      volume<-crownhull(xyz,plotit=FALSE)        \n      }  \n      crownvolume<-as.numeric(volume[1])\n      crownsurface<-as.numeric(volume[2]) }\n    \n    VolumeList<-data.frame(rbind(VolumeList,cbind(i,crownvolume,crownsurface)))\n  }\n  colnames(VolumeList)<-c(\"Tree\", \"crownvolume\", \"crownsurface\")\n  return(VolumeList)\n}\n\n",
    "created" : 1425976732760.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1813238770",
    "id" : "68C5F765",
    "lastKnownWriteTime" : 1425978142,
    "path" : "~/rLiDAR/rLiDAR/R/Volume3D.r",
    "project_path" : "R/Volume3D.r",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}