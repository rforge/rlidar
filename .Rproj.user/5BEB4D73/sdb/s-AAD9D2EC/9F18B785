{
    "contents" : "#--------------------------------------------------------------------------------------------------\n# SILVA, C. A.\n# Forester and Master's degree\n# PhD student at University of Idaho\n# College of Natural Resources\n# Forest, Fire and Rangeland Sciencies\n# carlos_engflorestal@outlook.com\n# Skype: Flowds\n#--------------------------------------------------------------------------------------------------\n\n#---------------------------------Forest stem volume modeling #------------------------------------------\n\n\n# 1) Entrada dos dados\ninputdata = read.table(\"C:\\\\Users\\\\Carlos\\\\Dropbox\\\\LiDAR_sharing2\\\\00_WorkingProgress\\\\00_artigo-LiDAR_PCA\\\\04_data\\\\tabela_PCA32.csv\", sep = \",\",head=TRUE)\n\n# exclud data with stem volume below 90 ( F987)\ninputdata=subset(inputdata, inputdata$Vtcc >=90)\n# attach data\nattach(inputdata)\n\n# exploring my data\nhead(inputdata)\nnrow(inputdata)\nncol(inputdata)\nnames(inputdata)\nsummary(inputdata)\n\n# keep these colums\nxdata = inputdata[,c(\"hmax\",\"hmed\",\"hcv\",\"hp25\",\"hp75\",\"dc\",\"Ap\",\"Elev\",\"Sp\")]\nsummary(xdata)\nattach(xdata)\nnrow(xdata)\n\n# correlation matrix\ncor(cbind(Vtcc,xdata))\nncol(xdata)\nnames(xdata)\n\n# histogram of the stem volume\nhist(Vtcc)\n\n# PCA analise\n# install libraries\ninstall.packages(\"FactoMineR\")\nrequire(FactoMineR)\nres.pca <- PCA(xdata, graph=T, ncp=NULL)\nwindows()\nplot(res.pca, xlim=c(-10,10), ylim=c(-10,10))\n\n# PCs information\nPC1 <- res.pca$ind$coord[,1]\nPC2 <- res.pca$ind$coord[,2]\nPC3 <- res.pca$ind$coord[,3]\nPC4 <- res.pca$ind$coord[,4]\nPC5 <- res.pca$ind$coord[,5]\n\nlabs <- rownames(res.pca$ind$coord)\nPCs <- data.frame(cbind(PC1,PC2,PC3,PC4,PC5))\nrownames(PCs) <- labs\nPCs\n# \nround(res.pca$var$coord[,1:5],5) # Eigenvectors\nround(res.pca$eig,5) # varaince\nround(res.pca$ind$dist,2)\nround(res.pca$ind$contrib[,1:5],2)\nround(res.pca$var$contrib[,1:5],2)\n\nlapply(dimdesc(res.pca),lapply,round,2)\n\n# plot variance\nbarplot(res.pca$eig[,1])\n\n\n## Computing and ploting a bpca object with 'graphics' package - 2d\n##\ninstall.packages('bpca')\nrequire(bpca)\n## Example 1\n\n\n# Additional graphical parameters (nonsense)\nwindows()\nplot(bpca(xdata, meth='sqrt'),\n     main='Principal Component Analysis ',var.factor=0.5, var.cex=1, var.col=\"black\",\n     obj.pch='o', obj.cex=0.5, obj.col=\"dark gray\", obj.pos=1, \n     obj.offset=0.2, xlim=c(-1.5,1.5), ylim=c(-1.5,1.5))\n\n# homogeneidade - teste\nrequire(car)\nrequire(hydroGOF)\n\n\n# models to stem volum estimation.\nmod1 = lm( Vtcc ~ PC1, data=inputdata)\nsummary(mod1)\ncor(Vtcc,mod1$fitted)\nrmse(Vtcc,mod1$fitted)\nrmse2=((rmse(Vtcc,mod1$fitted))/mean(Vtcc))*100\nrmse2\n\nshapiro.test(residuals(mod1))\nncvTest(mod1) \n\n\nmod2 = lm( Vtcc ~ PC1 + PC2, data=inputdata)\nsummary(mod2)\ncor(Vtcc,mod2$fitted)\nrmse(Vtcc,mod2$fitted)\nrmse2=((rmse(Vtcc,mod2$fitted))/mean(Vtcc))*100\nrmse2\nshapiro.test(residuals(mod2))\nncvTest(mod2) \n\nshapiro.test(residuals(mod1))\nncvTest(mod1) \n\nmod3 = lm( Vtcc ~ PC1 + PC2 + PC3, data=inputdata)\nsummary(mod3)\ncor(Vtcc,mod3$fitted)\nrmse(Vtcc,mod3$fitted)\nrmse2=((rmse(Vtcc,mod3$fitted))/mean(Vtcc))*100\nrmse2\nshapiro.test(residuals(mod3))\nncvTest(mod3) \n\nmod4 = lm( Vtcc ~ PC1 + PC2 + PC3 + PC4, data=inputdata)\nsummary(mod4)\ncor(Vtcc,mod4$fitted)\nrmse(Vtcc,mod4$fitted)\nrmse2=((rmse(Vtcc,mod4$fitted))/mean(Vtcc))*100\nrmse2\nshapiro.test(residuals(mod4))\nncvTest(mod4)  \n\n\n#mod5 = lm( Vtcc ~ PC1 + PC2 + PC3 + PC4 + PC5, data=inputdata)\n#summary(mod5)\n#cor(Vtcc,mod5$fitted)\n#rmse(Vtcc,mod5$fitted)\n#rmse2=((rmse(Vtcc,mod5$fitted))/mean(Vtcc))*100\n#rmse2\n#shapiro.test(residuals(mod5))\n#ncvTest(mod5) \n\n\nmod6 = lm(Vtcc ~ hmed, data=inputdata)\nsummary(mod6)\ncor(Vtcc,mod6$fitted)\nrmse(Vtcc,mod6$fitted)\nrmse2=((rmse(Vtcc,mod6$fitted))/mean(Vtcc))*100\nrmse2\nshapiro.test(residuals(mod6))\nncvTest(mod6) \n\nmod7 = lm(Vtcc ~ hmed + hcv, data=inputdata)\n\nplot(mod7, col=\"dodgerblue2\")\nsummary(mod7)\nqqnorm(Vtcc)\ncor(Vtcc,mod7$fitted)\nrmse(Vtcc,mod7$fitted)\nrmse2=((rmse(Vtcc,mod7$fitted))/mean(Vtcc))*100\nrmse2\nshapiro.test(residuals(mod7))\nncvTest(mod7) \n\nmod8 = lm(Vtcc ~ hmed + hcv + slop, data=inputdata)\nsummary(mod8)\ncor(Vtcc,mod8$fitted)\nrmse(Vtcc,mod8$fitted)\nrmse2=((rmse(Vtcc,mod8$fitted))/mean(Vtcc))*100\nrmse2\nshapiro.test(residuals(mod8))\nncvTest(mod8) \n\nmod9 = lm(Vtcc ~ hmed + hcv + slop + aspect, data=inputdata)\nsummary(mod9)\ncor(Vtcc,mod9$fitted)\nrmse(Vtcc,mod9$fitted)\nrmse2=((rmse(Vtcc,mod9$fitted))/mean(Vtcc))*100\nrmse2\nshapiro.test(residuals(mod9))\nncvTest(mod9) \n\n#mod10 = lm( Vtcc ~  hmed + hcv + slop + aspect + dem, data=inputdata)\n#summary(mod10)\n#cor(Vtcc,mod10$fitted)\n#rmse(Vtcc,mod10$fitted)\n#rmse2=((rmse(Vtcc,mod10$fitted))/mean(Vtcc))*100\n#rmse2\n#shapiro.test(residuals(mod10))\n#ncvTest(mod10) \n\n\n# Teste para comparar os modelos\n\n# AICc = AIC + 2p(p + 1)/(N - p - 1) from (Sugiura, 1978)\n\n# p= numero de parametros no modelo . \n\n# N= numero da amostra\nn=nrow(inputdata)\n\nAICc1=AIC(mod1)+(2*1*(1+1))/(n-1-1)\nAICc2=AIC(mod2)+(2*2*(2+1))/(n-2-1)\nAICc3=AIC(mod3)+(2*3*(3+1))/(n-3-1)\nAICc4=AIC(mod4)+(2*4*(4+1))/(n-4-1)\n#AICc5=AIC(mod5)+(2*5*(5+1))/(n-5-1)\nAICc6=AIC(mod6)+(2*1*(1+1))/(n-1-1)\nAICc7=AIC(mod7)+(2*2*(2+1))/(n-2-1)\nAICc8=AIC(mod8)+(2*3*(3+1))/(n-3-1)\nAICc9=AIC(mod9)+(2*4*(4+1))/(n-4-1)\n#AICc10=AIC(mod10)+(2*5*(5+1))/(n-5-1)\n\n\nAICc1\nAICc2\nAICc3\nAICc4\n#AICc5\nAICc6\nAICc7\nAICc8\nAICc9\n#AICc10\n\nanova(mod7, mod2,mod3,mod4,mod5,mod6,mod7,mod8)\n\n#RMSE\ninstall.packages(\"hydroGOF\")\nrequire(hydroGOF)\nVtcc.pred<-mod7$fitted.values\nnewdf<-data.frame(Vtcc,Vtcc.pred,faz)\n\nsummary(newdf)\nvtccObsFazMean<-tapply(newdf[,1],newdf[,3], mean)\nvtccPredFazMean<-tapply(newdf[,2],newdf[,3], mean)\n\nvtccObsFazsd<-tapply(newdf[,1],newdf[,3], sd)\nvtccPredFazsd<-tapply(newdf[,2],newdf[,3], sd)\n\nrmse(Vtcc,Vtcc.pred)\nrmse2=((rmse(Vtcc,Vtcc.pred))/mean(Vtcc))*100\nrmse2\ncor(Vtcc,Vtcc.pred)\n\nrange(Vtcc.pred)\n\n# model and observed -> equivalence plot\nrequire(equivalence)\nwindows()\npar(mfrow=c(2,2))\npx2 = equivalence.xyplot(Vtcc ~ Vtcc.pred,\n                         alpha=0.05, b0.ii=0.25, b1.ii=0.25, ylim=c(0,500), \n                         xlim=c(0,500),main=\"a)\" ,type=\"p\",lwd=5, pch=50, \n                         xlab=\"Stem Volume Predicted (m?/ha) \", ylab=\"Stem Volume Observed (m?/ha)\")\n\n\n# cross validation leave-one-out\n\nVtcc.resid=c(length=nrow(inputdata))        # Must create a vector for the calculated residuals\nVtcc.fitted=c(length=nrow(inputdata))       # Also create a vector for the independent predictions\n\nfor (i in 1:nrow(inputdata)) {\n  cross=lm(Vtcc ~ hmed + hcv, data=inputdata[-i,])                    \n  Vtcc.est=predict(cross, inputdata[i,])     # The estimate for each plot in the loop\n  Vtcc.resid[i]=inputdata$Vtcc[i]-Vtcc.est\n  Vtcc.fitted[i]=Vtcc.est \n}\n\n\n\n# validation and model\ncor(Vtcc.pred, Vtcc.fitted)\n#plot(Vtcc.fitted,Vtcc.pred, main=\"b)\", xlim=c(0,500), ylim=c(0,500),type=\"p\",lwd=1, pch=16, col = \"black\",  ylab=\"Stem Volume Predicted by Model (m?/ha)\", xlab=\"Stem Volume Predicted - 'Leave-out one' (m?/ha) \")\n#abline(0,1, lwd=2,col=\"dark gray\")\nrmse(Vtcc.pred,Vtcc.fitted)\nrmse2=((rmse(Vtcc.pred, Vtcc.fitted))/mean(Vtcc.pred))*100\nrmse2\n#text(400, 170, \"r = 0.99\")\n#text(390, 120, \"RMSE%= 2.22 \")\n#text(365, 70, \"RMSE= 0.56 (m?/ha)\")\n#text(495, 455, \"1:1\")\n\n# validation and model  -> equivalence plot\nrequire(equivalence)\nwindows()\npar(mfrow=c(2,2))\npx2 = equivalence.xyplot(Vtcc.pred ~ Vtcc.fitted,\n                         alpha=0.05, b0.ii=0.25, b1.ii=0.25, ylim=c(0,500), \n                         xlim=c(0,500),main=\"a)\" ,type=\"p\",lwd=5, pch=50, \n                        xlab=\"Stem Volume Predicted by Model (m?/ha) \", ylab=\"Stem Volume Predicted - 'Leave-out one' (m?/ha)\")\n\n# validation and observed\ncor(Vtcc.fitted, Vtcc)\nplot(Vtcc.fitted, Vtcc, main=\"b)\", xlim=c(0,500), ylim=c(0,500),type=\"p\",lwd=1, pch=16, col = \"black\",  ylab=\"Stem Volume Observed (m?/ha)\", xlab=\"Stem Volume Predicted - 'Leave-out one' (m?/ha) \")\nabline(0,1, lwd=2,col=\"dark gray\")\nrmse(Vtcc,Vtcc.fitted)\nrmse2=((rmse(Vtcc.fitted,Vtcc))/mean(Vtcc))*100\nrmse2\ntext(400, 170, \"r = 0.96\")\ntext(390, 120, \"RMSE%= 10.00 \")\ntext(360, 70, \"RMSE= 25.27 (m?/ha)\")\ntext(495, 455, \"1:1\")\n\n# validation and observed  -> equivalence plot\nrequire(equivalence)\nwindows()\npar(mfrow=c(2,2))\npx2 = equivalence.xyplot(Vtcc ~ Vtcc.fitted,\n                         alpha=0.05, b0.ii=0.25, b1.ii=0.25, ylim=c(0,500), \n                         xlim=c(0,500),main=\"a)\" ,type=\"p\",lwd=5, pch=50, \n                         xlab=\"Stem Volume Predicted - 'Leave-out one' (m?/ha) \", ylab=\"Stem Volume Observed (m?/ha)\")\n\n\n# resid model\n\nplot(Vtcc.pred, mod7$resid, main=\"d)\",col=\"dodgerblue2\", xlim=c(100,450), ylim=c(-100,100),lwd=1, pch=1, xlab=\" Stem Volume Predicted (Mg/ha) \", ylab=\"Residuos \")\nabline(0,0, lwd=1,col=\"dark gray\")\n\n\n#Rp<- (((Vtcc.pred) - (Vtcc)) / Vtcc) *100\n\n#plot(Vtcc.pred, Rp, main=\"d)\",col=\"dodgerblue2\", xlim=c(0,500), ylim=c(-100,100),lwd=1, pch=1, xlab=\"AGB predicted (Mg/ha) \", ylab=\"Residuos (%)\")\n#abline(0,0, lwd=2,col=\"dark gray\")\n\n\n################# F987 ###################################################################\n# mapa\n#require(yaImpute)\n#require(sp)\n# modelo 4: hp75 + hcv\n#Lon = NULL\n#Lat = NULL\n#Rows = NULL\n#Cols = NULL\n#Nodata = -9999\n#MyPredFunc = NULL\n#predlist = list(hp75=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_carbono\\\\00_processamento\\\\00_F987\\\\10_pontos\\\\ltk\\\\lyers\\\\Metrics\\\\Elev_P75_5METERS.asc\",\n#                hcv=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_carbono\\\\00_processamento\\\\00_F987\\\\10_pontos\\\\ltk\\\\lyers\\\\Metrics\\\\ElevCV_5METERS.asc\")\n\n#XTypes = list(hp75=\"numeric\",hcv=\"numeric\")\n\n#outlist = list(predict=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_PCA_paper\\\\PCAs_volume\\\\02_maps\\\\F987_volume.asc\")\n#AsciiGridPredict(mod4, predlist, outlist, xyptes = XTypes, lon = Lon, lat = Lat, rows = Rows, cols = Cols, nodata = Nodata, myPredFunc = MyPredFunc)\n#outgrid = read.asciigrid(\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_PCA_paper\\\\PCAs_volume\\\\02_maps\\\\F987_volume.asc\")\n\n#--- Extract values of standard deviation and mean for stock carbon predict previosly ---#\n# Packages necessary\n#require(adehabitat);require(raster);require(sp);require(spdep);require(maptools);require(gpclib);gpclibPermit();\n# Importing shapefile of the land\n#require(base)\n\n# F987\n#shp_talhoes <- readShapePoly('C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\DISSERTACAO\\\\00_LiDAR_Fibria\\\\Dados_LAS\\\\Shapes\\\\F987_shapefile\\\\F987_shp.shp')\n\n# preview\n#image(outgrid, col=gray(0:255/255))\n#plot(shp_talhoes, add=T, border='red', bg='transparent', asp=1)\n\n# merge with land\n#outgrid_talhoes <- outgrid[!is.na(overlay(outgrid, shp_talhoes)),]\n\n# two forms to preview\n#image(outgrid_talhoes, col=gray(0:255/255))\n#plot(shp_talhoes, add=T, border='lightgray', bg='transparent', asp=1)\n#spplot(outgrid_talhoes, col.regions=bpy.colors(64), scale=list(draw=T),\n#       sp.layout=list(list(\"sp.polygons\", shp_talhoes)))\n\n#writeAsciiGrid(outgrid_talhoes,\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_PCA_paper\\\\PCAs_volume\\\\02_maps\\\\F987_volume.stand.asc\")\n\n\n\n################# F986 ###################################################################\n####\n####\n################# F986 ###################################################################\n# mapa\nrequire(yaImpute)\nrequire(sp)\n# modelo 4: hp75 + hcv\nLon = NULL\nLat = NULL\nRows = NULL\nCols = NULL\nNodata = -9999\nMyPredFunc = NULL\npredlist = list(hmed=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_carbono\\\\00_processamento\\\\00_F986\\\\10_pontos\\\\ltk\\\\lyers\\\\Metrics\\\\ElevMean_5METERS.asc\",\n                hcv=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_carbono\\\\00_processamento\\\\00_F986\\\\10_pontos\\\\ltk\\\\lyers\\\\Metrics\\\\ElevCV_5METERS.asc\")\n\nXTypes = list(hmed=\"numeric\",hcv=\"numeric\")\n\noutlist = list(predict=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_PCA_paper\\\\PCAs_volume\\\\02_maps\\\\F986_volume.asc\")\nAsciiGridPredict(mod7, predlist, outlist, xyptes = XTypes, lon = Lon, lat = Lat, rows = Rows, cols = Cols, nodata = Nodata, myPredFunc = MyPredFunc)\noutgrid = read.asciigrid(\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_PCA_paper\\\\PCAs_volume\\\\02_maps\\\\F986_volume.asc\")\n\n#--- Extract values of standard deviation and mean for stock carbon predict previosly ---#\n# Packages necessary\nrequire(adehabitat);require(raster);require(sp);require(spdep);require(maptools);require(gpclib);gpclibPermit();\n# Importing shapefile of the land\n\n# F986\nshp_talhoes <- readShapePoly('C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\DISSERTACAO\\\\00_LiDAR_Fibria\\\\Dados_LAS\\\\Shapes\\\\F986_shapefile\\\\F986_shp.shp')\n\n# preview\nimage(outgrid, col=gray(0:255/255))\nplot(shp_talhoes, add=T, border='red', bg='transparent', asp=1)\n\n# merge with land\noutgrid_talhoes <- outgrid[!is.na(overlay(outgrid, shp_talhoes)),]\n\n# two forms to preview\nimage(outgrid_talhoes, col=gray(0:255/255))\nplot(shp_talhoes, add=T, border='lightgray', bg='transparent', asp=1)\nspplot(outgrid_talhoes, col.regions=bpy.colors(64), scale=list(draw=T),\n       sp.layout=list(list(\"sp.polygons\", shp_talhoes)))\n\nwriteAsciiGrid(outgrid_talhoes,\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_PCA_paper\\\\PCAs_volume\\\\02_maps\\\\F986_volume.stand.asc\")\n\n\n################# F950 ###################################################################\n####\n####\n################# F950 ###################################################################\n# mapa\nrequire(yaImpute)\nrequire(sp)\n# modelo 4: hp75 + hcv\nLon = NULL\nLat = NULL\nRows = NULL\nCols = NULL\nNodata = -9999\nMyPredFunc = NULL\npredlist = list(hmed=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_carbono\\\\00_processamento\\\\00_F950\\\\10_pontos\\\\ltk\\\\lyers\\\\Metrics\\\\ElevMean_5METERS.asc\",\n                hcv=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_carbono\\\\00_processamento\\\\00_F950\\\\10_pontos\\\\ltk\\\\lyers\\\\Metrics\\\\ElevCV_5METERS.asc\")\n\nXTypes = list(hmed=\"numeric\",hcv=\"numeric\")\n\noutlist = list(predict=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_PCA_paper\\\\PCAs_volume\\\\02_maps\\\\F950_volume.asc\")\nAsciiGridPredict(mod7, predlist, outlist, xyptes = XTypes, lon = Lon, lat = Lat, rows = Rows, cols = Cols, nodata = Nodata, myPredFunc = MyPredFunc)\noutgrid = read.asciigrid(\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_PCA_paper\\\\PCAs_volume\\\\02_maps\\\\F950_volume.asc\")\n\n#--- Extract values of standard deviation and mean for stock carbon predict previosly ---#\n# Packages necessary\nrequire(adehabitat);require(raster);require(sp);require(spdep);require(maptools);require(gpclib);gpclibPermit();\n# Importing shapefile of the land\n\n# F950\nshp_talhoes <- readShapePoly('C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\DISSERTACAO\\\\00_LiDAR_Fibria\\\\Dados_LAS\\\\Shapes\\\\F950_shapefile\\\\F950_shp.shp')\n\n# preview\nimage(outgrid, col=gray(0:255/255))\nplot(shp_talhoes, add=T, border='red', bg='transparent', asp=1)\n\n# merge with land\noutgrid_talhoes <- outgrid[!is.na(overlay(outgrid, shp_talhoes)),]\n\n# two forms to preview\nimage(outgrid_talhoes, col=gray(0:255/255))\nplot(shp_talhoes, add=T, border='red', bg='transparent', asp=1)\n\nwriteAsciiGrid(outgrid_talhoes,\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_PCA_paper\\\\PCAs_volume\\\\02_maps\\\\F950_volume.stand.asc\")\n\n################# F948 ###################################################################\n####\n####\n################# F948 ###################################################################\n# mapa\nrequire(yaImpute)\nrequire(sp)\n# modelo 4: hp75 + hcv\nLon = NULL\nLat = NULL\nRows = NULL\nCols = NULL\nNodata = -9999\nMyPredFunc = NULL\npredlist = list(hmed=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_carbono\\\\00_processamento\\\\00_F948\\\\10_pontos\\\\ltk\\\\lyers\\\\Metrics\\\\ElevMean_5METERS.asc\",\n                hcv=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_carbono\\\\00_processamento\\\\00_F948\\\\10_pontos\\\\ltk\\\\lyers\\\\Metrics\\\\ElevCV_5METERS.asc\")\n\nXTypes = list(hmed=\"numeric\",hcv=\"numeric\")\n\noutlist = list(predict=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_PCA_paper\\\\PCAs_volume\\\\02_maps\\\\F948_volume.asc\")\nAsciiGridPredict(mod7, predlist, outlist, xyptes = XTypes, lon = Lon, lat = Lat, rows = Rows, cols = Cols, nodata = Nodata, myPredFunc = MyPredFunc)\noutgrid = read.asciigrid(\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_PCA_paper\\\\PCAs_volume\\\\02_maps\\\\F948_volume.asc\")\n\n#--- Extract values of standard deviation and mean for stock carbon predict previosly ---#\n# Packages necessary\nrequire(adehabitat);require(raster);require(sp);require(spdep);require(maptools);require(gpclib);gpclibPermit();\n# Importing shapefile of the land\n\n# F948\nshp_talhoes <- readShapePoly('C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\DISSERTACAO\\\\00_LiDAR_Fibria\\\\Dados_LAS\\\\Shapes\\\\F948_shapefile\\\\F948_shp.shp')\n\n# preview\nimage(outgrid, col=gray(0:255/255))\nplot(shp_talhoes, add=T, border='red', bg='transparent', asp=1)\n\n# merge with land\noutgrid_talhoes <- outgrid[!is.na(overlay(outgrid, shp_talhoes)),]\n\n# two forms to preview\nimage(outgrid_talhoes, col=gray(0:255/255))\nplot(shp_talhoes, add=T, border='red', bg='transparent', asp=1)\n\n\nwriteAsciiGrid(outgrid_talhoes,\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_PCA_paper\\\\PCAs_volume\\\\02_maps\\\\F948_volume.stand.asc\")\n\n\n################# F849 ###################################################################\n####\n####\n################# F849 ###################################################################\n# mapa\nrequire(yaImpute)\nrequire(sp)\n# modelo 4: hp75 + hcv\nLon = NULL\nLat = NULL\nRows = NULL\nCols = NULL\nNodata = -9999\nMyPredFunc = NULL\npredlist = list(hmed=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_carbono\\\\00_processamento\\\\00_F849\\\\10_pontos\\\\ltk\\\\lyers\\\\Metrics\\\\ElevMean_5METERS.asc\",\n                hcv=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_carbono\\\\00_processamento\\\\00_F849\\\\10_pontos\\\\ltk\\\\lyers\\\\Metrics\\\\ElevCV_5METERS.asc\")\n\nXTypes = list(hmed=\"numeric\",hcv=\"numeric\")\n\noutlist = list(predict=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_PCA_paper\\\\PCAs_volume\\\\02_maps\\\\F849_volume.asc\")\nAsciiGridPredict(mod7, predlist, outlist, xyptes = XTypes, lon = Lon, lat = Lat, rows = Rows, cols = Cols, nodata = Nodata, myPredFunc = MyPredFunc)\noutgrid = read.asciigrid(\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_PCA_paper\\\\PCAs_volume\\\\02_maps\\\\F849_volume.asc\")\n\n#--- Extract values of standard deviation and mean for stock carbon predict previosly ---#\n# Packages necessary\nrequire(adehabitat);require(raster);require(sp);require(spdep);require(maptools);require(gpclib);gpclibPermit();\n# Importing shapefile of the land\n\n# F849\nshp_talhoes <- readShapePoly('C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\DISSERTACAO\\\\00_LiDAR_Fibria\\\\Dados_LAS\\\\Shapes\\\\F849_shapefile\\\\F849_shp.shp')\n\n# preview\nimage(outgrid, col=gray(0:255/255))\nplot(shp_talhoes, add=T, border='red', bg='transparent', asp=1)\n\n# merge with land\noutgrid_talhoes <- outgrid[!is.na(overlay(outgrid, shp_talhoes)),]\n\n# two forms to preview\nimage(outgrid_talhoes, col=gray(0:255/255))\nplot(shp_talhoes, add=T, border='red', bg='transparent', asp=1)\n\n\nwriteAsciiGrid(outgrid_talhoes,\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_PCA_paper\\\\PCAs_volume\\\\02_maps\\\\F849_volume.stand.asc\")\n\n\n################# F634 ###################################################################\n####\n####\n################# F634 ###################################################################\n# mapa\nrequire(yaImpute)\nrequire(sp)\n# modelo 4: hp75 + hcv\nLon = NULL\nLat = NULL\nRows = NULL\nCols = NULL\nNodata = -9999\nMyPredFunc = NULL\npredlist = list(hmed=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_carbono\\\\00_processamento\\\\00_F634\\\\10_pontos\\\\ltk\\\\lyers\\\\Metrics\\\\ElevMean_5METERS.asc\",\n                hcv=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_carbono\\\\00_processamento\\\\00_F634\\\\10_pontos\\\\ltk\\\\lyers\\\\Metrics\\\\ElevCV_5METERS.asc\")\n\nXTypes = list(hmed=\"numeric\",hcv=\"numeric\")\n\noutlist = list(predict=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_PCA_paper\\\\PCAs_volume\\\\02_maps\\\\F634_volume.asc\")\nAsciiGridPredict(mod7, predlist, outlist, xyptes = XTypes, lon = Lon, lat = Lat, rows = Rows, cols = Cols, nodata = Nodata, myPredFunc = MyPredFunc)\noutgrid = read.asciigrid(\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_PCA_paper\\\\PCAs_volume\\\\02_maps\\\\F634_volume.asc\")\n\n#--- Extract values of standard deviation and mean for stock carbon predict previosly ---#\n# Packages necessary\nrequire(adehabitat);require(raster);require(sp);require(spdep);require(maptools);require(gpclib);gpclibPermit();\n# Importing shapefile of the land\n\n# F634\nshp_talhoes <- readShapePoly('C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\DISSERTACAO\\\\00_LiDAR_Fibria\\\\Dados_LAS\\\\Shapes\\\\F634_shapefile\\\\F634_shp.shp')\n\n# preview\nimage(outgrid, col=gray(0:255/255))\nplot(shp_talhoes, add=T, border='red', bg='transparent', asp=1)\n\n# merge with land\noutgrid_talhoes <- outgrid[!is.na(overlay(outgrid, shp_talhoes)),]\n\n# two forms to preview\nimage(outgrid_talhoes, col=gray(0:255/255))\nplot(shp_talhoes, add=T, border='red', bg='transparent', asp=1)\n\n\nwriteAsciiGrid(outgrid_talhoes,\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_PCA_paper\\\\PCAs_volume\\\\02_maps\\\\F634_volume.stand.asc\")\n\n\n################# F184 ###################################################################\n####\n####\n################# F184 ###################################################################\n# mapa\nrequire(yaImpute)\nrequire(sp)\n# modelo 4: hp75 + hcv\nLon = NULL\nLat = NULL\nRows = NULL\nCols = NULL\nNodata = -9999\nMyPredFunc = NULL\npredlist = list(hmed=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_carbono\\\\00_processamento\\\\00_F184\\\\10_pontos\\\\ltk\\\\lyers\\\\Metrics\\\\ElevMean_5METERS.asc\",\n                hcv=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_carbono\\\\00_processamento\\\\00_F184\\\\10_pontos\\\\ltk\\\\lyers\\\\Metrics\\\\ElevCV_5METERS.asc\")\n\nXTypes = list(hmed=\"numeric\",hcv=\"numeric\")\n\noutlist = list(predict=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_PCA_paper\\\\PCAs_volume\\\\02_maps\\\\F184_volume.asc\")\nAsciiGridPredict(mod7, predlist, outlist, xyptes = XTypes, lon = Lon, lat = Lat, rows = Rows, cols = Cols, nodata = Nodata, myPredFunc = MyPredFunc)\noutgrid = read.asciigrid(\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_PCA_paper\\\\PCAs_volume\\\\02_maps\\\\F184_volume.asc\")\n\n#--- Extract values of standard deviation and mean for stock carbon predict previosly ---#\n# Packages necessary\nrequire(adehabitat);require(raster);require(sp);require(spdep);require(maptools);require(gpclib);gpclibPermit();\n# Importing shapefile of the land\n\n# F184\nshp_talhoes <- readShapePoly('C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\DISSERTACAO\\\\00_LiDAR_Fibria\\\\Dados_LAS\\\\Shapes\\\\F184_shapefile\\\\F184_shp.shp')\n\n# preview\nimage(outgrid, col=gray(0:255/255))\nplot(shp_talhoes, add=T, border='red', bg='transparent', asp=1)\n\n# merge with land\noutgrid_talhoes <- outgrid[!is.na(overlay(outgrid, shp_talhoes)),]\n\n# two forms to preview\nimage(outgrid_talhoes, col=gray(0:255/255))\nplot(shp_talhoes, add=T, border='red', bg='transparent', asp=1)\n\n\nwriteAsciiGrid(outgrid_talhoes,\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_PCA_paper\\\\PCAs_volume\\\\02_maps\\\\F184_volume.stand.asc\")\n\n\n################# F166 ###################################################################\n####\n####\n################# F166 ###################################################################\n# mapa\nrequire(yaImpute)\nrequire(sp)\n# modelo 4: hp75 + hcv\nLon = NULL\nLat = NULL\nRows = NULL\nCols = NULL\nNodata = -9999\nMyPredFunc = NULL\npredlist = list(hmed=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_carbono\\\\00_processamento\\\\00_F166\\\\10_pontos\\\\ltk\\\\lyers\\\\Metrics\\\\ElevMean_5METERS.asc\",\n                hcv=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_carbono\\\\00_processamento\\\\00_F166\\\\10_pontos\\\\ltk\\\\lyers\\\\Metrics\\\\ElevCV_5METERS.asc\")\n\nXTypes = list(hmed=\"numeric\",hcv=\"numeric\")\n\noutlist = list(predict=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_PCA_paper\\\\PCAs_volume\\\\02_maps\\\\F166_volume.asc\")\nAsciiGridPredict(mod7, predlist, outlist, xyptes = XTypes, lon = Lon, lat = Lat, rows = Rows, cols = Cols, nodata = Nodata, myPredFunc = MyPredFunc)\noutgrid = read.asciigrid(\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_PCA_paper\\\\PCAs_volume\\\\02_maps\\\\F166_volume.asc\")\n\n#--- Extract values of standard deviation and mean for stock carbon predict previosly ---#\n# Packages necessary\nrequire(adehabitat);require(raster);require(sp);require(spdep);require(maptools);require(gpclib);gpclibPermit();\n# Importing shapefile of the land\n\n# F166\nshp_talhoes <- readShapePoly('C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\DISSERTACAO\\\\00_LiDAR_Fibria\\\\Dados_LAS\\\\Shapes\\\\F166_shapefile\\\\F166_shp.shp')\n\n# preview\nimage(outgrid, col=gray(0:255/255))\nplot(shp_talhoes, add=T, border='red', bg='transparent', asp=1)\n\n# merge with land\noutgrid_talhoes <- outgrid[!is.na(overlay(outgrid, shp_talhoes)),]\n\n# two forms to preview\nimage(outgrid_talhoes, col=gray(0:255/255))\nplot(shp_talhoes, add=T, border='red', bg='transparent', asp=1)\n\n\nwriteAsciiGrid(outgrid_talhoes,\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_PCA_paper\\\\PCAs_volume\\\\02_maps\\\\F166_volume.stand.asc\")\n\n\n################# F146 ###################################################################\n####\n####\n################# F146 ###################################################################\n# mapa\n#require(yaImpute)\n#require(sp)\n# modelo 4: hp75 + hcv\n#Lon = NULL\n#Lat = NULL\n#Rows = NULL\n#Cols = NULL\n#Nodata = -9999\n#MyPredFunc = NULL\n#predlist = list(hmed=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_carbono\\\\00_processamento\\\\00_F146\\\\10_pontos\\\\ltk\\\\lyers\\\\Metrics\\\\ElevMean_5METERS.asc\",\n#                hcv=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_carbono\\\\00_processamento\\\\00_F146\\\\10_pontos\\\\ltk\\\\lyers\\\\Metrics\\\\ElevCV_5METERS.asc\")\n\n#XTypes = list(hmed=\"numeric\",hcv=\"numeric\")\n\n#outlist = list(predict=\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_PCA_paper\\\\PCAs_volume\\\\02_maps\\\\F146_volume.asc\")\n#AsciiGridPredict(mod7, predlist, outlist, xyptes = XTypes, lon = Lon, lat = Lat, rows = Rows, cols = Cols, nodata = Nodata, myPredFunc = MyPredFunc)\n#outgrid = read.asciigrid(\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_PCA_paper\\\\PCAs_volume\\\\02_maps\\\\F146_volume.asc\")\n\n#--- Extract values of standard deviation and mean for stock carbon predict previosly ---#\n# Packages necessary\n#require(adehabitat);require(raster);require(sp);require(spdep);require(maptools);require(gpclib);gpclibPermit();\n# Importing shapefile of the land\n\n# F634\n#shp_talhoes <- readShapePoly('C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\DISSERTACAO\\\\00_LiDAR_Fibria\\\\Dados_LAS\\\\Shapes\\\\F634_shapefile\\\\F146_shp.shp')\n\n# preview\n#image(outgrid, col=gray(0:255/255))\n#plot(shp_talhoes, add=T, border='red', bg='transparent', asp=1)\n\n# merge with land\n#outgrid_talhoes <- outgrid[!is.na(overlay(outgrid, shp_talhoes)),]\n\n# two forms to preview\n#image(outgrid_talhoes, col=gray(0:255/255))\n#plot(shp_talhoes, add=T, border='red', bg='transparent', asp=1)\n\n\n#writeAsciiGrid(outgrid_talhoes,\"C:\\\\Users\\\\Carlos\\\\Documents\\\\00_Artigos_dissertacao\\\\00_PCA_paper\\\\PCAs_volume\\\\02_maps\\\\F146_volume.stand.asc\")\n",
    "created" : 1413148795730.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "649144309",
    "id" : "9F18B785",
    "lastKnownWriteTime" : 1413956656,
    "path" : "C:/Users/Carlos/Dropbox/LiDAR_sharing2/00_WorkingProgress/00_artigo-LiDAR_PCA/03_statistic/PCA_script.r.R",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}