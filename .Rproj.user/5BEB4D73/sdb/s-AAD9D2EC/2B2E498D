{
    "contents" : "% Generated by roxygen2 (4.0.2): do not edit by hand\n\\name{CHMsmoothing}\n\\alias{CHMsmoothing}\n\\title{LiDAR-derived Canopy Height Model (CHM) smoothing}\n\\usage{\nCHMsmoothing(chm, filter, ws, sigma)\n}\n\\arguments{\n\\item{chm}{A LiDAR-derived Canopy Height Model - CHM (*.tif, *.asc or *.img)}\n\n\\item{filter}{mean, median, maximum, minimum or gaussian. Default is \"mean\".}\n\n\\item{ws}{Single square matrix of weights dimension, e.g. 3,5, 7 and so on. Default is 5.}\n\n\\item{sigma}{Used only when filter is equal to gaussian, e.g. 0.5, 1.0, 1.5 and so on. Default is 0.6.}\n}\n\\value{\nreturns CHM smoothed\n}\n\\description{\nLiDAR-derived Canopy Height Model (CHM) smoothing using focal statistcs\n}\n\\examples{\n\\dontrun{\n\n#'#' Importing the LiDAR-derived CHM file\ndata(chm) # or set a CHM. e.g. chm<-readGDAL(\"CHM_stand.asc\")\n\n#' Example 01: Smoothing CHM using gaussian filter\n\n#' Set the ws:\nws<-3 # dimention 3x3\n\n#' Set the filter type\nfilter<-\"gaussian\"\n\n#' Set the sigma value\nsigma<-0.6\n\n#' Smoothing CHM\nsCHM<-CHMsmoothing(chm, filter, ws, sigma)\n\n#' Plotting CHM smoothed\nplot(sCHM, main=paste(filter,\"filter and windows size\", paste0(ws,\"x\",ws)))\n\n\n#' Example 02: Smoothing CHM using mean filter\n\n#' Set the ws:\nws<-5 # dimention 5x5\n\n#' Set the filter type\nfilter<-\"mean\"\n\n#' Smoothing CHM\nsCHM<-CHMsmoothing(chm, filter, ws, sigma)\n\n#' Plotting CHM smoothed\nplot(sCHM, main=paste(filter,\"filter and window size\", paste0(ws,\"x\",ws)))\n\n}\n}\n\\author{\nCarlos Alberto Silva\n}\n\n",
    "created" : 1415866029044.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4287330787",
    "id" : "2B2E498D",
    "lastKnownWriteTime" : 1415866873,
    "path" : "~/rLiDAR/rLiDAR/man/CHMsmoothing.Rd",
    "project_path" : "man/CHMsmoothing.Rd",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_doc"
}